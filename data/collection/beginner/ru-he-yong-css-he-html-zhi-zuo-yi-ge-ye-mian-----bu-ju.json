{"body":"<h1 id=\"%E5%A6%82%E4%BD%95%E7%94%A8css%E5%92%8Chtml%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E9%A1%B5%E9%9D%A2---%E5%B8%83%E5%B1%80\"><a class=\"header-anchor\" href=\"#%E5%A6%82%E4%BD%95%E7%94%A8css%E5%92%8Chtml%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E9%A1%B5%E9%9D%A2---%E5%B8%83%E5%B1%80\">¶</a> 如何用css和html制作一个页面 - 布局</h1>\n<h2 id=\"%E9%A6%96%E5%85%88%E5%85%88%E7%A1%AE%E7%AB%8B%E4%B8%80%E4%B8%AA%E7%9B%AE%E6%A0%87%EF%BC%9A%E5%81%9A%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2%E6%A8%A1%E6%9D%BF\"><a class=\"header-anchor\" href=\"#%E9%A6%96%E5%85%88%E5%85%88%E7%A1%AE%E7%AB%8B%E4%B8%80%E4%B8%AA%E7%9B%AE%E6%A0%87%EF%BC%9A%E5%81%9A%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2%E6%A8%A1%E6%9D%BF\">¶</a> 首先先确立一个目标：做一个博客模板</h2>\n<p>博客模板一般包含3个页面，首页，文章列表，文章详细页，我自己做了一个简单的页面，如下图所示：\n<img src=\"./3/index.jpg\" alt=\"index.jpg\">\n<img src=\"./3/list.jpg\" alt=\"list.jpg\">\n<img src=\"./3/article.jpg\" alt=\"article.jpg\"></p>\n<p>我们先观察这3张图片，找到共同的部分，尽可能的多一些复用。很明显每张图片都是三种颜色分成3部分。从左到右，分别是：绿色、灰色、白色。实际是内容不同的部分就是最右侧白色的部分。所以确定是 <code>左中右</code> 三栏布局。</p>\n<p>先找一个文件夹建立项目，为了简单，我在桌面建立了一个文件夹 <code>blog</code> ，里面文件结构如下：</p>\n<pre><code>|-- blog\n    |-- assets\n        |-- images // 图片文件\n        |-- scripts // JS文件\n        |-- styles // css文件\n            |-- article.css // 文章页样式\n            |-- global.css // 全局样式\n            |-- index.css // 首页样式\n            |-- list.css // 列表页样式\n    |-- article.html // 文章\n    |-- index.html // 首页\n    |-- list.html // 列表\n</code></pre>\n<p>文件建好之后，开始编辑代码，处理第一个页面 <code>首页</code> 。\nindex.html插入初始结构：</p>\n<pre><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n  &lt;head&gt;\n    &lt;meta charset=&quot;utf-8&quot;&gt;\n    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1.0&quot;&gt;\n    &lt;link rel=&quot;icon&quot; href=&quot;/favicon.ico&quot;&gt;\n    &lt;title&gt;首页 - 我的博客&lt;/title&gt;\n    &lt;meta name=&quot;keywords&quot; content=&quot;我的博客&quot;/&gt;\n    &lt;meta name=&quot;description&quot; content=&quot;我的博客简介。&quot;/&gt;\n    &lt;link href=&quot;assets/styles/global.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt; &lt;!-- 引入全局css --&gt;\n    &lt;link href=&quot;assets/styles/index.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt; &lt;!-- 引入当前页面css --&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div class=&quot;layout&quot;&gt;\n      &lt;div class=&quot;left&quot;&gt;left&lt;/div&gt;\n      &lt;div class=&quot;center&quot;&gt;center&lt;/div&gt;\n      &lt;div class=&quot;right&quot;&gt;right&lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p>因为布局是要复用的部分，所以跟布局相关的css我们写在 <code>global.css</code> 中。因为css3已经出来很久了，大部分浏览器也支持的比较好，所以我们先用css3的方式来布局，代码如下：</p>\n<pre><code class=\"language-css\">@charset &quot;utf-8&quot;;\n\nhtml, body {\n\twidth: 100%; /* 这里是必须的 */\n\theight: 100%; /* 这里是必须的 */\n\tmargin: 0;\n\tpadding: 0;\n}\n\n.layout {\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: flex; /* css3 flex 关键点 */\n}\n.left {\n\twidth: 72px;\n\tbackground-color: #26b192;\n}\n.center {\n\twidth: 489px;\n\tborder-right: 1px #e6ecf1 solid;\n\tbackground-color: #f5f7f9;\n}\n.right {\n\tflex: 1; /* 将剩余的宽度都给到.right */\n}\n</code></pre>\n<p>问题1：宽度和高度100%的规则是怎么样的？\n宽度和高度的100%是相对当前元素的父级来说， <code>.layout</code> 的父级就是 <code>body</code> ， <code>body</code> 的父级就是 <code>html</code> ，如果父级没有宽度和高度，对应的100%也就没有高度和宽度，可以删除上面代码的第四行和第五行，验证一下。</p>\n<p>问题2： <code>.center</code> 的实际宽度是多少？\n这里就要引入一个概念就是是 <code>CSS盒子模型</code> 。CSS盒子模型其实就是描述的是一个元素在页面中所占用的位置或者说是占用的面积有多大。\n<img src=\"./3/1.png\" alt=\"box.png\">\ncss3中，如果显式的设置了 <code>box-sizing: border-box;</code> ，那么.box的宽度和高度将不在包含padding和border，如：</p>\n<pre><code class=\"language-css\">.box { \n  width: 100px;\n  height: 100px; \n  border: 10px #26b192 solid; \n  padding: 20px; \n  margin: 30px; \n  box-sizing: border-box; \n}\n/* box所占用的宽就是100 + 30 + 30 = 160px，高也是100 + 30 + 30 = 160px */\n\n.box { \n  width: 100px;\n  height: 100px; \n  border: 10px #26b192 solid; \n  padding: 20px; \n  margin: 30px;\n}\n/* box所占用的宽就是100 + 20 + 20 + 10 + 10 + 30 + 30 = 220px，高也是100 + 20 + 20 + 10 + 10 + 30 + 30 = 220px */\n</code></pre>\n<h2 id=\"%E4%BD%BF%E7%94%A8float%E6%96%B9%E5%BC%8F%E6%9D%A5%E5%B8%83%E5%B1%80\"><a class=\"header-anchor\" href=\"#%E4%BD%BF%E7%94%A8float%E6%96%B9%E5%BC%8F%E6%9D%A5%E5%B8%83%E5%B1%80\">¶</a> 使用float方式来布局</h2>\n<pre><code class=\"language-css\">@charset &quot;utf-8&quot;;\n\nhtml, body {\n\twidth: 100%;\n\theight: 100%;\n\tmargin: 0;\n\tpadding: 0;\n}\n\n.layout {\n\twidth: 100%;\n\theight: 100%;\n\tfloat: left;\n\tclear: both;\n}\n.left {\n\twidth: 72px;\n\tbackground-color: #26b192;\n\tfloat: left;\n\theight: 100%;\n}\n.center {\n\twidth: 489px;\n\tborder-right: 1px #e6ecf1 solid;\n\tbackground-color: #f5f7f9;\n\tfloat: left;\n\theight: 100%;\n}\n.right {\n\tfloat: right;\n\theight: 100%;\n}\n</code></pre>\n<p>可以对比下2次的代码，实现的效果差不多，但是css2的方式是有缺陷的，.right的宽度不好控制。如果要保证3块一直在一行，需要用position来实现。</p>\n<p>缺陷1：BFC(Block Formatting Context)，这个是高频面试题\n当float值为left、right时，会触发BFC模式，表现为，父级高度塌陷，margin重叠等问题。</p>\n<p>缺陷2：.right的宽度不好控制\n各种客户端屏幕大小不一样，虽然left和center的宽度是固定，总宽度不定，所以.right宽度也就不固定</p>\n<h2 id=\"%E7%94%A8position%E7%9A%84%E6%96%B9%E5%BC%8F%E6%9D%A5%E5%B8%83%E5%B1%80\"><a class=\"header-anchor\" href=\"#%E7%94%A8position%E7%9A%84%E6%96%B9%E5%BC%8F%E6%9D%A5%E5%B8%83%E5%B1%80\">¶</a> 用position的方式来布局</h2>\n<p>这些页面有一个典型的表现，也就是left和center的高度是固定的，跟屏幕一样高，只有right部分的高度不固定，可能长可能短。如下：</p>\n<pre><code class=\"language-css\">@charset &quot;utf-8&quot;;\n\nhtml, body {\n\twidth: 100%;\n\theight: 100%;\n\tmargin: 0;\n\tpadding: 0;\n}\n\n.layout {\n\twidth: 100%;\n\theight: 100%;\n\tposition: relative;\n}\n.left {\n\twidth: 72px;\n\tbackground-color: #26b192;\n\tfloat: left;\n\theight: 100%;\n}\n.center {\n\twidth: 489px;\n\tborder-right: 1px #e6ecf1 solid;\n\tbackground-color: #f5f7f9;\n\tfloat: left;\n\theight: 100%;\n}\n.right {\n\tposition: absolute;\n\tword-break: break-all;\n\tleft: 562px;\n\ttop: 0;\n}\n</code></pre>\n<h2 id=\"%E6%80%BB%E7%BB%93\"><a class=\"header-anchor\" href=\"#%E6%80%BB%E7%BB%93\">¶</a> 总结</h2>\n<p>综合上面的来看，最简洁的是css3的布局方式。但是低版本浏览器不兼容。如果不考虑兼容问题，建议直接使用css3方式来布局。现在大部分的已经没有兼容性的要求了，但是政府网站，机关网站可能会有需求。</p>\n","path":"collection/beginner","navigation":[{"tag":"h1","slug":"%E5%A6%82%E4%BD%95%E7%94%A8css%E5%92%8Chtml%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E9%A1%B5%E9%9D%A2---%E5%B8%83%E5%B1%80","title":"如何用css和html制作一个页面 - 布局"},{"tag":"h2","slug":"%E9%A6%96%E5%85%88%E5%85%88%E7%A1%AE%E7%AB%8B%E4%B8%80%E4%B8%AA%E7%9B%AE%E6%A0%87%EF%BC%9A%E5%81%9A%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2%E6%A8%A1%E6%9D%BF","title":"首先先确立一个目标：做一个博客模板"},{"tag":"h2","slug":"%E4%BD%BF%E7%94%A8float%E6%96%B9%E5%BC%8F%E6%9D%A5%E5%B8%83%E5%B1%80","title":"使用float方式来布局"},{"tag":"h2","slug":"%E7%94%A8position%E7%9A%84%E6%96%B9%E5%BC%8F%E6%9D%A5%E5%B8%83%E5%B1%80","title":"用position的方式来布局"},{"tag":"h2","slug":"%E6%80%BB%E7%BB%93","title":"总结"}],"orderIndex":3,"filename":"ru-he-yong-css-he-html-zhi-zuo-yi-ge-ye-mian-----bu-ju"}