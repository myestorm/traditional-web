{"collection":{"title":"文章集子","keywords":["前端","初级","教程"],"desc":"这份HTML初级教程假设你没有任何HTML和CSS的知识背景。学习基本的HTML十分容易，只要你能从头到尾按照每一步骤来实践。最后我们会将每一步综合起来，以便我们继续学习CSS初级指南。","id":"x8ma3zj7","body":"","path":"collection","count":0,"pagesize":10,"list":[]},"frontend":{"title":"文章集子","keywords":["前端","初级","教程"],"desc":"这份HTML初级教程假设你没有任何HTML和CSS的知识背景。学习基本的HTML十分容易，只要你能从头到尾按照每一步骤来实践。最后我们会将每一步综合起来，以便我们继续学习CSS初级指南。","id":"x8ma3zj7","body":"","path":"frontend","count":0,"pagesize":10,"list":[]},"collection/beginner":{"title":"初级教程","keywords":["前端","初级","教程"],"desc":"这份HTML初级教程假设你没有任何HTML和CSS的知识背景。学习基本的HTML十分容易，只要你能从头到尾按照每一步骤来实践。最后我们会将每一步综合起来，以便我们继续学习CSS初级指南。","id":"pz04ptof","body":"","path":"collection/beginner","count":12,"pagesize":10,"list":[{"title":"html标签学习","keywords":["前端","初级","教程"],"desc":"这份HTML初级教程假设你没有任何HTML和CSS的知识背景。学习基本的HTML十分容易，只要你能从头到尾按照每一步骤来实践。最后我们会将每一步综合起来，以便我们继续学习CSS初级指南。","body":"<blockquote>\n<p>HTML的英文全称是 Hyper Text Marked Language，即超文本标记语言。HTML是由Web的发明者 Tim Berners-Lee和同事 Daniel W. Connolly于1990年创立的一种标记语言，它是标准通用化标记语言SGML的应用。用HTML编写的超文本文档称为HTML文档，它能独立于各种操作系统平台(如UNIX， Windows等)。使用HTML语言，将所需要表达的信息按某种规则写成HTML文件，通过专用的浏览器来识别，并将这些HTML文件“翻译”成可以识别的信息，即现在所见到的网页。</p>\n</blockquote>\n<p>标记语言的意思就是用指定的标签来表示指定的意思。比如<code>&lt;h1&gt;&lt;/h1&gt;</code>表示标题，<code>&lt;p&gt;&lt;/p&gt;</code>表示段落，<code>&lt;ol&gt;&lt;/ol&gt;</code>表示有序列表等。所以学习html的技巧没有别的，就是记住每个标签是什么意思，怎么用就行了。一般分为输入和输出2种，输出就是纯展示，输入就是与用户的交互（input，select等）。</p>\n<p><strong>提示：</strong></p>\n<ul>\n<li>html注释写法<code>&lt;!-- 注释 --&gt;</code>，注释就是写给自己看的，不会展现在页面上。</li>\n<li>正文部分的标签一般是成对出现，比如h1，<code>&lt;h1&gt;</code>表示开始 <code>&lt;/h1&gt;</code>表示结尾。</li>\n<li>但是有一些不用成对出现，比如换行符<code>&lt;br&gt;</code></li>\n<li>现在说的都是html5标签，现代浏览器大部分都支持了，如果要支持到IE6，请自行退下。</li>\n</ul>\n<p>下面的代码就包含了常用的一些html标签，这些标签记住了，基本上就掌握了html语言。如果了解全量的html标签，可以自己去找。</p>\n<pre><code class=\"language-html\">&lt;!DOCTYPE html&gt; &lt;!-- 声明文档类型版本 --&gt;\n&lt;html&gt; &lt;!-- html开始 --&gt;\n  &lt;head&gt; &lt;!-- 头部 --&gt;\n    &lt;meta charset=&quot;utf-8&quot;&gt; &lt;!-- 声明编码，一般用utf-8 --&gt;\n    &lt;title&gt;网页标题&lt;/title&gt; &lt;!-- 文档标题，显示在浏览器的标签 --&gt;\n    &lt;meta name=&quot;keywords&quot; content=&quot;文档关键词&quot;&gt; &lt;!-- 文档关键词 --&gt;\n    &lt;meta name=&quot;description&quot; content=&quot;文档描述&quot;&gt; &lt;!-- 文档描述 --&gt;\n    &lt;link rel=&quot;shortcut icon&quot; href=&quot;/favicon.ico&quot;&gt; &lt;!-- 文档icon，显示在浏览器的标签 --&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;/styles/main.css&quot; media=&quot;all&quot;&gt; &lt;!-- 引入css --&gt;\n  &lt;/head&gt;\n  &lt;body&gt; &lt;!-- 正文 --&gt;&lt;!-- 列一些常用标签 --&gt;\n    &lt;!-- 输出 --&gt;\n    &lt;h1&gt;我是1级标题&lt;/h1&gt;\n    &lt;h2&gt;我是2级标题&lt;/h2&gt;\n    &lt;h3&gt;我是3级标题&lt;/h3&gt;\n    &lt;h4&gt;我是4级标题&lt;/h4&gt;\n    &lt;h5&gt;我是5级标题&lt;/h5&gt;\n    &lt;h6&gt;我是6级标题&lt;/h6&gt;\n    &lt;p&gt;段落&lt;/p&gt;\n    &lt;ul&gt;\n      &lt;li&gt;无序列表&lt;/li&gt;\n      &lt;li&gt;无序列表&lt;/li&gt;\n    &lt;/ul&gt;\n    &lt;ol&gt;\n      &lt;li&gt;有序列表&lt;/li&gt;\n      &lt;li&gt;有序列表&lt;/li&gt;\n    &lt;/ol&gt;\n    &lt;dl&gt;\n      &lt;dt&gt;项目1&lt;/dt&gt;\n      &lt;dd&gt;项目说明&lt;/dd&gt;\n      &lt;dt&gt;项目2&lt;/dt&gt;\n      &lt;dd&gt;项目说明2&lt;/dd&gt;\n      &lt;dd&gt;项目说明3&lt;/dd&gt;\n    &lt;/dl&gt;\n    &lt;a href=&quot;http://mp.weixin.qq.com&quot;&gt;我是链接&lt;/a&gt;\n    &lt;div&gt;无意义块级节点&lt;/div&gt;\n    &lt;span&gt;无意义行内元素&lt;/span&gt;\n    &lt;table&gt; &lt;!-- 表格 --&gt;\n      &lt;thead&gt; &lt;!-- 表格头部 --&gt;\n        &lt;tr&gt;\n          &lt;th&gt;日期&lt;/th&gt;\n          &lt;th&gt;金额&lt;/th&gt;\n        &lt;/tr&gt;\n      &lt;/thead&gt;\n      &lt;tbody&gt; &lt;!-- 表格主题 --&gt;\n        &lt;tr&gt;\n          &lt;td&gt;2020-06-06&lt;/td&gt;\n          &lt;td&gt;&amp;yen; 100.00&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n          &lt;td&gt;2020-06-07&lt;/td&gt;\n          &lt;td&gt;&amp;yen; 200.00&lt;/td&gt;\n        &lt;/tr&gt;\n      &lt;/tbody&gt;\n      &lt;tfoot&gt; &lt;!-- 表格尾部 --&gt;\n        &lt;tr&gt;\n          &lt;td colspan=&quot;2&quot;&gt;&amp;yen; 300.00&lt;/td&gt;\n        &lt;/tr&gt;\n      &lt;/tfoot&gt;\n    &lt;/table&gt;\n    &lt;!-- 行内js --&gt;\n    &lt;script&gt;\n      console.log(1)\n    &lt;/script&gt;\n    &lt;!-- 引入js文件 --&gt;\n    &lt;script src=&quot;path/index.js&quot;&gt;&lt;/script&gt;\n    &lt;!-- 行内css --&gt;\n    &lt;style&gt;\n      a { font-size: 12px; }\n    &lt;/style&gt;\n    &lt;!-- 布局类标签 --&gt;\n    &lt;section&gt; &lt;!-- 文档的区段 --&gt;\n      &lt;aside&gt;&lt;/aside&gt; &lt;!-- 要表达的内容之外的内容 --&gt;\n      &lt;section&gt;\n        &lt;header&gt;&lt;/header&gt; &lt;!-- 头部 --&gt;\n        &lt;main&gt;\n          &lt;article&gt;文档内容&lt;/article&gt;\n        &lt;/main&gt; &lt;!-- 主体 --&gt;\n        &lt;footer&gt;&lt;/footer&gt; &lt;!-- 尾部 --&gt;\n      &lt;/section&gt;\n    &lt;/section&gt;\n\n    &lt;!-- 以上就是常用的输出标签，更多标签就自行查找了 --&gt;\n\n    &lt;!-- 输入标签 --&gt;\n    &lt;form&gt;\n      &lt;ul&gt;\n        &lt;li&gt;\n          &lt;label&gt;名字：&lt;input type=&quot;text&quot;&gt;&lt;/label&gt;\n        &lt;/li&gt;\n        &lt;li&gt;\n          性别：\n          &lt;label&gt;&lt;input type=&quot;radio&quot; value=&quot;1&quot; name=&quot;g&quot;&gt; 男&lt;/label&gt; \n          &lt;label&gt;&lt;input type=&quot;radio&quot; value=&quot;0&quot; name=&quot;g&quot;&gt; 女&lt;/label&gt;\n        &lt;/li&gt;\n        &lt;li&gt;\n          &lt;label&gt;\n            籍贯：\n            &lt;select&gt;\n              &lt;option value=&quot;beijing&quot;&gt;北京市&lt;/option&gt;\n              &lt;option value=&quot;yueyang&quot;&gt;湖南省岳阳市&lt;/option&gt;\n            &lt;/select&gt;\n          &lt;/label&gt;\n        &lt;/li&gt;\n        &lt;li&gt;\n          爱好：\n          &lt;label&gt;&lt;input type=&quot;checkbox&quot; value=&quot;1&quot; name=&quot;l&quot;&gt; 看书&lt;/label&gt; \n          &lt;label&gt;&lt;input type=&quot;checkbox&quot; value=&quot;2&quot; name=&quot;l&quot;&gt; 游泳&lt;/label&gt;\n          &lt;label&gt;&lt;input type=&quot;checkbox&quot; value=&quot;3&quot; name=&quot;l&quot;&gt; 上网&lt;/label&gt;\n        &lt;/li&gt;\n        &lt;li&gt;\n          &lt;label&gt;\n            自我介绍：\n            &lt;textarea&gt;&lt;/textarea&gt;\n          &lt;/label&gt;\n        &lt;/li&gt;\n      &lt;/ul&gt;\n      &lt;fieldset&gt; &lt;!-- 复杂表单进行分块 这个是比较有用 --&gt;\n        &lt;legend&gt;你伴侣的信息&lt;/legend&gt;\n        &lt;ul&gt;\n          &lt;li&gt;\n            &lt;label&gt;名字：&lt;input type=&quot;text&quot;&gt;&lt;/label&gt;\n          &lt;/li&gt;\n          &lt;li&gt;\n            性别：\n            &lt;label&gt;&lt;input type=&quot;radio&quot; value=&quot;1&quot; name=&quot;g&quot;&gt; 男&lt;/label&gt; \n            &lt;label&gt;&lt;input type=&quot;radio&quot; value=&quot;0&quot; name=&quot;g&quot;&gt; 女&lt;/label&gt;\n          &lt;/li&gt;\n        &lt;/ul&gt;\n      &lt;/fieldset&gt;\n      &lt;button type=&quot;reset&quot;&gt;重置表单&lt;/button&gt;\n      &lt;button type=&quot;submit&quot;&gt;提交数据&lt;/button&gt;\n    &lt;/form&gt;\n\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p>用2个面试题来结尾吧。</p>\n<ul>\n<li>~~ 怎么判断一个网页使用的html的版本？这个html5刚出来的时候面试官很喜欢问，答案就是根据第一行的申明<code>&lt;!DOCTYPE html&gt;</code>来判断，现在基本应该没有人问了。 ~~</li>\n<li>怎么理解html语义化标签？就是尽量搞懂每个标签代表的意思，表达内容和标签能基本匹配就行。这个其实也不重要，但是有人会问。</li>\n</ul>\n","path":"collection/beginner","pathTitle":"初级教程","navigation":[],"orderIndex":1,"filename":"html-biao-qian-xue-xi"},{"body":"<h1 id=\"%E6%9D%A5%E4%B8%80%E5%9C%BA%E5%AE%9E%E6%88%98%EF%BC%8Cajax%E5%92%8C%E6%93%8D%E4%BD%9Cdom\"><a class=\"header-anchor\" href=\"#%E6%9D%A5%E4%B8%80%E5%9C%BA%E5%AE%9E%E6%88%98%EF%BC%8Cajax%E5%92%8C%E6%93%8D%E4%BD%9Cdom\">¶</a> 来一场实战，ajax和操作dom</h1>\n<h2 id=\"%E4%BB%80%E4%B9%88%E6%98%AFajax\"><a class=\"header-anchor\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AFajax\">¶</a> 什么是ajax</h2>\n<blockquote>\n<p>Ajax 即“Asynchronous Javascript And XML”（异步 JavaScript 和 XML），是指一种创建交互式、快速动态网页应用的网页开发技术，无需重新加载整个网页的情况下，能够更新部分网页的技术。\n通过在后台与服务器进行少量数据交换，Ajax 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。</p>\n</blockquote>\n<p>我的理解比较直接一些，就是向服务端发送数据或者从服务端获取数据。</p>\n<h2 id=\"ajax%E8%AF%B7%E6%B1%82%E7%B1%BB%E5%9E%8B%E4%B8%8Erestful-api\"><a class=\"header-anchor\" href=\"#ajax%E8%AF%B7%E6%B1%82%E7%B1%BB%E5%9E%8B%E4%B8%8Erestful-api\">¶</a> ajax请求类型与RESTful API</h2>\n<p>ajax请求类型一般分为4类， <code>POST</code> <code>GET</code> <code>PUT</code> <code>DELETE</code> 。一般使用post和get。\n当前后端完全分离以后，服务端只提供ajax接口，一般操作类型就是增改查删（CURD）\n假设我们数据库里有一张User表，我们根据表对象模型User，按照restful规范设计的接口应该是这样的：\n新增用户:[POST] /users\n修改用户:[PUT] /users/id\n删除用户:[DELETE] /users/id\n查找全部用户:[GET] /users\n这样ajax的请求类型就和接口的类型对应起来了，而且非常清晰。</p>\n<p>当然不一定非要这么用，只是说这么用比较合适。</p>\n<h2 id=\"%E5%8F%91%E9%80%81ajax%E8%AF%B7%E6%B1%82%E7%9A%84%E6%96%B9%E5%BC%8F\"><a class=\"header-anchor\" href=\"#%E5%8F%91%E9%80%81ajax%E8%AF%B7%E6%B1%82%E7%9A%84%E6%96%B9%E5%BC%8F\">¶</a> 发送ajax请求的方式</h2>\n<ol>\n<li>axios 【插件】</li>\n<li>jQuery的ajax 【插件】</li>\n<li>ES6中的 fetch</li>\n<li>XMLHttpRequest对象</li>\n</ol>\n<p>上面的两个插件非常好用，一般情况下我们无需用原生的js去实现，使用插件更加方便。用原生的js来写demo只是为了更好的理解过程。</p>\n<h2 id=\"%E4%BA%86%E8%A7%A3%E4%B8%80%E4%B8%8Bpromise\"><a class=\"header-anchor\" href=\"#%E4%BA%86%E8%A7%A3%E4%B8%80%E4%B8%8Bpromise\">¶</a> 了解一下Promise</h2>\n<p>在这个教程里面只说基础的用法，更深入的部分自行学习。ajax是一个典型的异步请求，啥叫异步呢？一般来说代码是一行一行执行，理论上来说是执行完第一行再执行第二行，这个就叫“同步”；如果第一行是异步的话，就是说在执行第二步的时候，第一步并没有执行完成。为了在第二步中能使用第一步中的结果，最早的方式是使用回调，就是把第二步当成一个函数，传给第一步，等第一步执行完成在执行这个函数。如果异步的过程很多的时候，就歇菜了，代码基本很很难阅读和理解，这个就是所谓的“回调地狱”。所以Promise能比较优雅的解决这个问题。</p>\n<pre><code class=\"language-javascript\">// 用回调的方式\nfunction read (cb) {\n  let a = 1\n  setTimeout(() =&gt; { // 2秒后完成操作\n    a = 30\n    if (cb) {\n      cb(a)\n    }\n  }, 2000)\n}\nread((num) =&gt; {\n  console.log(num)\n})\n\n// 用promise的方式\nfunction readPromise () {\n  let a = 1\n  return new Promise((resolve) =&gt; {\n    setTimeout(() =&gt; { // 2秒后完成操作\n      a = 30\n      resolve(a)\n    }, 2000)\n  })\n}\nreadPromise().then(num =&gt; {\n  console.log(num)\n})\n</code></pre>\n<p>附加说一下，高频面试题：\nPromise.all() 可以用来一次执行多个异步任务\nPromise.race() 获得先返回的结果</p>\n<h2 id=\"%E5%8E%9F%E7%94%9F%E7%9A%84js%E6%9D%A5%E5%86%99%E4%B8%80%E4%B8%AA%E8%AF%B7%E6%B1%82%E7%9A%84%E8%8C%83%E4%BE%8B\"><a class=\"header-anchor\" href=\"#%E5%8E%9F%E7%94%9F%E7%9A%84js%E6%9D%A5%E5%86%99%E4%B8%80%E4%B8%AA%E8%AF%B7%E6%B1%82%E7%9A%84%E8%8C%83%E4%BE%8B\">¶</a> 原生的JS来写一个请求的范例</h2>\n<p>来一个to do list</p>\n<pre><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;to do list&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div&gt;\n      &lt;ul id=&quot;to-do-list&quot;&gt;&lt;/ul&gt;\n      &lt;button id=&quot;add&quot;&gt;添加&lt;/button&gt;\n    &lt;/div&gt;\n    &lt;script&gt;\n      const id = 'to-do-list'\n      const container = document.querySelector(`#${id}`)\n      const btn = document.querySelector('#add')\n      // ajax请求方法\n      const ajax = (method = 'GET', url, data = {}) =&gt; {\n        return new Promise((resolve, reject) =&gt; {\n          const xhr = new XMLHttpRequest()\n          // 请求成功回调函数\n          xhr.onload = e =&gt; {\n            resolve(JSON.parse(xhr.response)) // 将服务端返回的数据返回\n          }\n          // 请求出错\n          xhr.onerror = e =&gt; {\n            // 返回错误\n            reject({\n              code: -1,\n              msg: '请求出错'\n            })\n          }\n          // 请求超时\n          xhr.ontimeout = e =&gt; {\n            // 返回错误\n            reject({\n              code: -2,\n              msg: '请求超时'\n            })\n          }\n          xhr.open(method, url, true);\n          xhr.send(data)\n        })\n      }\n      // 获取列表\n      ajax('GET', 'http://yapi.totonoo.com/mock/11/list').then(res =&gt; {\n        // 这里是成功后执行的操作\n        let html = ''\n        res.data.forEach(item =&gt; {\n          // 拼接字符串\n          html += `&lt;li&gt;&lt;label&gt;&lt;input type=&quot;checkbox&quot;&gt; ${item.title}&lt;/label&gt;&lt;/li&gt;`\n        })\n        // 将拼接好的字符串插入到指定的位置\n        container.innerHTML = html\n      }).catch(err =&gt; {\n        // 这里是失败后执行的操作\n        alert(err.msg)\n      }).finally(() =&gt; {\n        // 完成后执行，不管成功或者失败，只要这一次请求完成了\n          console.log('done)\n      })\n      // 添加事件\n      btn.addEventListener('click', () =&gt; {\n        // 表单参数\n        const formData = new FormData()\n        formData.append('username', 'lurenjia');\n        ajax('POST', 'http://yapi.totonoo.com/mock/11/add', formData).then(res =&gt; {\n          // 创建DOM\n          const item = document.createElement('li')\n          // 插入内容\n          item.innerHTML = '&lt;label&gt;&lt;input type=&quot;checkbox&quot;&gt; 新增的&lt;/label&gt;'\n          // 在指定位置的最后插入创建的dom\n          container.appendChild(item)\n        }).catch(err =&gt; {\n          alert(err.msg)\n        })\n      })\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p>PUT、DELETE跟上面的类似，可以自己尝试去弄一下，这里就到此为止。</p>\n<h2 id=\"http%E8%AF%B7%E6%B1%82%E7%9A%84%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3\"><a class=\"header-anchor\" href=\"#http%E8%AF%B7%E6%B1%82%E7%9A%84%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3\">¶</a> http请求的过程详解</h2>\n<p>这个实际上就是描述，从用户从浏览器敲入网址之后回车，到浏览器显示页面的过程。\n<img src=\"10/1.jpeg\" alt=\"1.jpg\"></p>\n<h2 id=\"%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98\"><a class=\"header-anchor\" href=\"#%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98\">¶</a> 如何解决跨域问题</h2>\n<p>为什么会有跨域的问题？浏览器为了安全，使用同源策略导致了跨域。如果缺少了同源策略，浏览器很容易受到XSS、CSFR等攻击。所谓同源是指&quot;协议+域名+端口&quot;三者相同，即便两个不同的域名指向同一个ip地址，也非同源。\n同源策略限制的表现（网上复制的）</p>\n<blockquote>\n<ol>\n<li>Cookie、LocalStorage 和 IndexDB 无法读取</li>\n<li>DOM 和 Js对象无法获得</li>\n<li>AJAX 请求不能发送</li>\n</ol>\n</blockquote>\n<p>一般来说前端最常见的表现就是AJAX 请求不能发送，1和2一般没有人在意，也不会有人这么做。</p>\n<p>常用解决跨域的方法：</p>\n<ol>\n<li>Nginx反向代理</li>\n<li>Node中间代理</li>\n<li>CORS</li>\n<li>document.domain + iframe</li>\n</ol>\n<p>推荐顺序从上到下，如果前端使用Node提供http服务，推荐使用第二种方式。3依赖于后端，4我基本已经不怎么用了。</p>\n","path":"collection/beginner","pathTitle":"初级教程","navigation":[{"tag":"h1","slug":"%E6%9D%A5%E4%B8%80%E5%9C%BA%E5%AE%9E%E6%88%98%EF%BC%8Cajax%E5%92%8C%E6%93%8D%E4%BD%9Cdom","title":"来一场实战，ajax和操作dom"},{"tag":"h2","slug":"%E4%BB%80%E4%B9%88%E6%98%AFajax","title":"什么是ajax"},{"tag":"h2","slug":"ajax%E8%AF%B7%E6%B1%82%E7%B1%BB%E5%9E%8B%E4%B8%8Erestful-api","title":"ajax请求类型与RESTful API"},{"tag":"h2","slug":"%E5%8F%91%E9%80%81ajax%E8%AF%B7%E6%B1%82%E7%9A%84%E6%96%B9%E5%BC%8F","title":"发送ajax请求的方式"},{"tag":"h2","slug":"%E4%BA%86%E8%A7%A3%E4%B8%80%E4%B8%8Bpromise","title":"了解一下Promise"},{"tag":"h2","slug":"%E5%8E%9F%E7%94%9F%E7%9A%84js%E6%9D%A5%E5%86%99%E4%B8%80%E4%B8%AA%E8%AF%B7%E6%B1%82%E7%9A%84%E8%8C%83%E4%BE%8B","title":"原生的JS来写一个请求的范例"},{"tag":"h2","slug":"http%E8%AF%B7%E6%B1%82%E7%9A%84%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3","title":"http请求的过程详解"},{"tag":"h2","slug":"%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98","title":"如何解决跨域问题"}],"orderIndex":10,"filename":"lai-yi-chang-shi-zhan-ajax-he-cao-zuo-dom"},{"body":"<h1 id=\"%E5%85%B3%E4%BA%8E%E5%9F%BA%E7%A1%80%E7%9A%84%E9%87%8D%E8%A6%81%E6%80%A7%E4%BB%A5%E5%8F%8A%E5%A6%82%E4%BD%95%E8%BF%9B%E9%98%B6\"><a class=\"header-anchor\" href=\"#%E5%85%B3%E4%BA%8E%E5%9F%BA%E7%A1%80%E7%9A%84%E9%87%8D%E8%A6%81%E6%80%A7%E4%BB%A5%E5%8F%8A%E5%A6%82%E4%BD%95%E8%BF%9B%E9%98%B6\">¶</a> 关于基础的重要性以及如何进阶</h1>\n<h2 id=\"%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E7%BA%BF%E8%B7%AF%E5%9B%BE\"><a class=\"header-anchor\" href=\"#%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E7%BA%BF%E8%B7%AF%E5%9B%BE\">¶</a> 前端学习线路图</h2>\n<p>下面这张图是我在腾讯的开源框架omei中看到<a href=\"https://github.com/Tencent/omi\">https://github.com/Tencent/omi</a>，原出处：<a href=\"https://github.com/kamranahmedse/developer-roadmap\">https://github.com/kamranahmedse/developer-roadmap</a>。虽然看起来有些夸张，但是确实很准确，而且还在不停的扩大。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1285364/1596092743777-11c8619c-b369-4a1f-bef4-722708c20bda.png#align=left&amp;display=inline&amp;height=3175&amp;margin=%5Bobject%20Object%5D&amp;name=%E5%89%8D%E7%AB%AF%E7%94%9F%E6%80%81%E5%AD%A6%E4%B9%A0%E5%9B%BE.png&amp;originHeight=3175&amp;originWidth=1177&amp;size=755701&amp;status=done&amp;style=none&amp;width=1177\" alt=\"前端生态学习图.png\"></p>\n<h2 id=\"%E5%9F%BA%E7%A1%80%E5%9F%BA%E7%A1%80%E5%9F%BA%E7%A1%80\"><a class=\"header-anchor\" href=\"#%E5%9F%BA%E7%A1%80%E5%9F%BA%E7%A1%80%E5%9F%BA%E7%A1%80\">¶</a> 基础基础基础</h2>\n<p>虽然上面的roadmap看起来很多很复杂，但是最核心的东西还是只有四种： JS，CSS，HTML，NODE。彻底掌握了这几样，基本能覆盖到80%的业务场景了，靠这个吃口饭没有问题了。</p>\n<p>CSS的核心基础：选择器，权重，浏览器兼容性问题（现在不多见了），布局。最多就是要记住各种各种的属性，多用就熟悉了。</p>\n<p>HTML的核心基础：记住各种标签应用的场景，以及标签的属性。也是要多用就熟悉了。</p>\n<p>JAVASCRIPT的核心基础：数据类型，变量，对象，this指针，函数，数组，正则表达式，闭包，面向对象的JavaScript(原型和原型链)，BOM，DOM，厘清服务端JS（NODE）和客户端JS之间的区别。</p>\n<h2 id=\"%E6%8E%A8%E8%8D%90%E4%B9%A6%E7%B1%8D\"><a class=\"header-anchor\" href=\"#%E6%8E%A8%E8%8D%90%E4%B9%A6%E7%B1%8D\">¶</a> 推荐书籍</h2>\n<ol>\n<li>CSS世界-张鑫旭  <a href=\"https://www.cssworld.cn/\">https://www.cssworld.cn/</a></li>\n<li>Javascript权威指南-(美)弗拉纳根</li>\n<li>JavaScript高级程序设计-(美)(Nicholas C.Zakas)扎卡斯</li>\n<li>你不知道的javascript系列- [美] Kyle Simpson</li>\n<li>ES6标准入门-阮一峰</li>\n<li>JavaScript设计模式与开发实践-曾探</li>\n</ol>\n<h2 id=\"10000%E5%B0%8F%E6%97%B6%E5%AE%9A%E5%BE%8B\"><a class=\"header-anchor\" href=\"#10000%E5%B0%8F%E6%97%B6%E5%AE%9A%E5%BE%8B\">¶</a> 10000小时定律</h2>\n<p>虽然对10000小时定律现在有不同的意见，但是就写代码来说还是适用的，熟练技能只有不停的去写代码，不停止的思考，自然水到渠成。</p>\n","path":"collection/beginner","pathTitle":"初级教程","navigation":[{"tag":"h1","slug":"%E5%85%B3%E4%BA%8E%E5%9F%BA%E7%A1%80%E7%9A%84%E9%87%8D%E8%A6%81%E6%80%A7%E4%BB%A5%E5%8F%8A%E5%A6%82%E4%BD%95%E8%BF%9B%E9%98%B6","title":"关于基础的重要性以及如何进阶"},{"tag":"h2","slug":"%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E7%BA%BF%E8%B7%AF%E5%9B%BE","title":"前端学习线路图"},{"tag":"h2","slug":"%E5%9F%BA%E7%A1%80%E5%9F%BA%E7%A1%80%E5%9F%BA%E7%A1%80","title":"基础基础基础"},{"tag":"h2","slug":"%E6%8E%A8%E8%8D%90%E4%B9%A6%E7%B1%8D","title":"推荐书籍"},{"tag":"h2","slug":"10000%E5%B0%8F%E6%97%B6%E5%AE%9A%E5%BE%8B","title":"10000小时定律"}],"orderIndex":11,"filename":"guan-yu-ji-chu-de-zhong-yao-xing-yi-ji-ru-he-jin-jie"},{"body":"<h1 id=\"%E6%B5%81%E8%A1%8C%E7%9A%84%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6\"><a class=\"header-anchor\" href=\"#%E6%B5%81%E8%A1%8C%E7%9A%84%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6\">¶</a> 流行的前端框架</h1>\n<h2 id=\"javascript\"><a class=\"header-anchor\" href=\"#javascript\">¶</a> Javascript</h2>\n<ol>\n<li>Vue <a href=\"https://cn.vuejs.org/\">https://cn.vuejs.org/</a></li>\n<li>React <a href=\"https://reactjs.org/\">https://reactjs.org/</a></li>\n<li>Angular <a href=\"https://angular.io/\">https://angular.io/</a></li>\n<li>Jquery <a href=\"https://jquery.com/\">https://jquery.com/</a></li>\n</ol>\n<p>基本上主流的就这么多，Jquery本来不想写了，但是这个世界上还有不少的祖传代码，就加上了。前三个是MVVM模式的框架，JQ虽然不是，但是他为JS的发展提供了不可磨灭的贡献。</p>\n<h2 id=\"ui%E6%A1%86%E6%9E%B6\"><a class=\"header-anchor\" href=\"#ui%E6%A1%86%E6%9E%B6\">¶</a> UI框架</h2>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>网址</th>\n<th>JS框架</th>\n<th>开发公司</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ElementUI</td>\n<td><a href=\"https://element.eleme.cn/#/zh-CN\">https://element.eleme.cn/#/zh-CN</a></td>\n<td>vue</td>\n<td>饿了么</td>\n</tr>\n<tr>\n<td>AntD</td>\n<td><a href=\"https://ant.design/index-cn\">https://ant.design/index-cn</a></td>\n<td>react，非官方vue版本</td>\n<td>蚂蚁金服</td>\n</tr>\n<tr>\n<td>Vuetify</td>\n<td><a href=\"https://vuetifyjs.com/zh-Hans/\">https://vuetifyjs.com/zh-Hans/</a></td>\n<td>vue</td>\n<td>vue官方推荐</td>\n</tr>\n<tr>\n<td>Angular Material</td>\n<td><a href=\"https://material.angular.io/\">https://material.angular.io/</a></td>\n<td>Angula</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Cube-ui</td>\n<td><a href=\"https://didi.github.io/cube-ui/\">https://didi.github.io/cube-ui/</a></td>\n<td>vue</td>\n<td>滴滴</td>\n</tr>\n<tr>\n<td>Taro-ui</td>\n<td><a href=\"https://taro.aotu.io/\">https://taro.aotu.io/</a></td>\n<td>-</td>\n<td>京东</td>\n</tr>\n<tr>\n<td>FrozenUI</td>\n<td><a href=\"http://frozenui.github.io/\">http://frozenui.github.io/</a></td>\n<td>-</td>\n<td>腾讯</td>\n</tr>\n<tr>\n<td>Bootstrap</td>\n<td><a href=\"https://v4.bootcss.com/\">https://v4.bootcss.com/</a></td>\n<td>-</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>基本我常用的就这些</p>\n<h2 id=\"%E7%82%AB%E9%85%B7%E7%9A%84css%E6%A1%86%E6%9E%B6\"><a class=\"header-anchor\" href=\"#%E7%82%AB%E9%85%B7%E7%9A%84css%E6%A1%86%E6%9E%B6\">¶</a> 炫酷的CSS框架</h2>\n<p>Animate.css <a href=\"https://animate.style/\">https://animate.style/</a></p>\n<h2 id=\"%E5%AF%8C%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8\"><a class=\"header-anchor\" href=\"#%E5%AF%8C%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8\">¶</a> 富文本编辑器</h2>\n<ol>\n<li>百度编辑器 <a href=\"http://ueditor.baidu.com/website/onlinedemo.html\">http://ueditor.baidu.com/website/onlinedemo.html</a></li>\n<li>wangeditor <a href=\"http://www.wangeditor.com/\">http://www.wangeditor.com/</a></li>\n<li>tiny <a href=\"https://www.tiny.cloud/\">https://www.tiny.cloud/</a></li>\n<li>ckeditor <a href=\"https://ckeditor.com/\">https://ckeditor.com/</a></li>\n<li>codemirror <a href=\"https://codemirror.net/\">https://codemirror.net/</a></li>\n<li>Ace <a href=\"https://ace.c9.io/\">https://ace.c9.io/</a></li>\n<li>Monaco Editor <a href=\"https://microsoft.github.io/monaco-editor/\">https://microsoft.github.io/monaco-editor/</a></li>\n</ol>\n<h2 id=\"%E5%9B%BE%E8%A1%A8%E7%B1%BB\"><a class=\"header-anchor\" href=\"#%E5%9B%BE%E8%A1%A8%E7%B1%BB\">¶</a> 图表类</h2>\n<ol>\n<li>chartjs <a href=\"https://chartjs.bootcss.com/\">https://chartjs.bootcss.com/</a></li>\n<li>echarts <a href=\"https://echarts.apache.org/zh/index.html\">https://echarts.apache.org/zh/index.html</a></li>\n<li>antV <a href=\"https://antv.vision/zh\">https://antv.vision/zh</a></li>\n</ol>\n<h2 id=\"%E6%B8%B8%E6%88%8F%E7%B1%BB\"><a class=\"header-anchor\" href=\"#%E6%B8%B8%E6%88%8F%E7%B1%BB\">¶</a> 游戏类</h2>\n<ol>\n<li>Three.js <a href=\"https://threejs.org/\">https://threejs.org/</a></li>\n<li>babylonjs <a href=\"https://www.babylonjs.com/\">https://www.babylonjs.com/</a></li>\n</ol>\n<h2 id=\"nodejs%E7%9B%B8%E5%85%B3\"><a class=\"header-anchor\" href=\"#nodejs%E7%9B%B8%E5%85%B3\">¶</a> NodeJs相关</h2>\n<ol>\n<li>express <a href=\"https://www.expressjs.com.cn/\">https://www.expressjs.com.cn/</a></li>\n<li>koa <a href=\"https://koajs.com/\">https://koajs.com/</a></li>\n</ol>\n<h2 id=\"%E5%89%8D%E7%AB%AF%E5%85%AC%E4%BC%97%E5%8F%B7\"><a class=\"header-anchor\" href=\"#%E5%89%8D%E7%AB%AF%E5%85%AC%E4%BC%97%E5%8F%B7\">¶</a> 前端公众号</h2>\n<ol>\n<li>Alibaba F2E</li>\n<li>阿里巴巴国际UED</li>\n<li>百度地图技术团队</li>\n<li>冰山工作室</li>\n<li>Chameleon社区</li>\n<li>接水怪</li>\n<li>京东设计中心JDC</li>\n<li>前端早读课</li>\n<li>前端之巅</li>\n<li>腾讯ISUX</li>\n<li>UI头条</li>\n<li>网易UEDC</li>\n</ol>\n<h2 id=\"%E6%9C%80%E5%90%8E\"><a class=\"header-anchor\" href=\"#%E6%9C%80%E5%90%8E\">¶</a> 最后</h2>\n<p>总共12期，基本的东西都涉及到了。我觉得如果能自己认真试试，结合百度扩展一下，应该是可以做一个简单的网页了。下一个集子就是来写VUE的实战，做一个完整的前端项目。</p>\n<p>其实，无论前端框架如何变化，他需要处理的事情依旧是模板渲染、事件绑定、处理用户交互（输入信息或鼠标操作），只不过提供了不同的写法和理念。</p>\n","path":"collection/beginner","pathTitle":"初级教程","navigation":[{"tag":"h1","slug":"%E6%B5%81%E8%A1%8C%E7%9A%84%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6","title":"流行的前端框架"},{"tag":"h2","slug":"javascript","title":"Javascript"},{"tag":"h2","slug":"ui%E6%A1%86%E6%9E%B6","title":"UI框架"},{"tag":"h2","slug":"%E7%82%AB%E9%85%B7%E7%9A%84css%E6%A1%86%E6%9E%B6","title":"炫酷的CSS框架"},{"tag":"h2","slug":"%E5%AF%8C%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8","title":"富文本编辑器"},{"tag":"h2","slug":"%E5%9B%BE%E8%A1%A8%E7%B1%BB","title":"图表类"},{"tag":"h2","slug":"%E6%B8%B8%E6%88%8F%E7%B1%BB","title":"游戏类"},{"tag":"h2","slug":"nodejs%E7%9B%B8%E5%85%B3","title":"NodeJs相关"},{"tag":"h2","slug":"%E5%89%8D%E7%AB%AF%E5%85%AC%E4%BC%97%E5%8F%B7","title":"前端公众号"},{"tag":"h2","slug":"%E6%9C%80%E5%90%8E","title":"最后"}],"orderIndex":12,"filename":"liu-hang-de-qian-duan-kuang-jia"},{"title":"css基本概念学习","keywords":["前端","初级","教程"],"desc":"层叠样式表（CSS）是描述标记语言页面格式的标准（或语言），CSS使开发人员能够分离内容和可视元素，以实现更好的页面控制和灵活性 CSS文件通常通过HTML文件中的链接附加到HTML文件。","body":"<blockquote>\n<p>层叠样式表（CSS）是描述标记语言页面格式的标准（或语言），CSS使开发人员能够分离内容和可视元素，以实现更好的页面控制和灵活性 CSS文件通常通过HTML文件中的链接附加到HTML文件。</p>\n</blockquote>\n<p>首先说明的是html和css不是一门编程语言，他们只是一种标记语言，用指定的标签或规则表示指定的内容。所以为了扩展能力，就出现了less，sass等一些css编程语言，但是这些语言并不能被浏览器直接识别，通过编译工具转换成css，然后才能被浏览器识别。</p>\n<p>在这篇文章里不说less、sass，只是说css怎么和html结合，达到上色的效果。</p>\n<h2 id=\"%E9%80%9A%E8%BF%87css%E6%9D%A5%E8%BD%AC%E6%8D%A2%E5%9D%97%E7%BA%A7%E5%85%83%E7%B4%A0%E5%92%8C%E5%86%85%E8%81%94%E5%85%83%E7%B4%A0\"><a class=\"header-anchor\" href=\"#%E9%80%9A%E8%BF%87css%E6%9D%A5%E8%BD%AC%E6%8D%A2%E5%9D%97%E7%BA%A7%E5%85%83%E7%B4%A0%E5%92%8C%E5%86%85%E8%81%94%E5%85%83%E7%B4%A0\">¶</a> 通过css来转换块级元素和内联元素</h2>\n<p>区分这2种元素最好的方式就是看，该元素是否是独占一行，独占一样的就是块级元素，否则就是内联元素。</p>\n<pre><code class=\"language-html\">&lt;div&gt;我是块级元素&lt;/div&gt;\n&lt;div&gt;我是块级元素&lt;/div&gt;\n&lt;span&gt;我是内联元素&lt;/span&gt;&lt;span&gt;我是内联元素&lt;/span&gt;\n</code></pre>\n<p>将上面的代码存为html文件，就会看到<code>span</code>元素在一行，<code>div</code>元素就是独占一行的。</p>\n<pre><code class=\"language-html\">&lt;div&gt;我是块级元素&lt;/div&gt;\n&lt;div&gt;我是块级元素&lt;/div&gt;\n&lt;span&gt;我是内联元素&lt;/span&gt;&lt;span&gt;我是内联元素&lt;/span&gt;\n&lt;style&gt;\ndiv { display: inline; }\nspan { display: block; }\n&lt;/style&gt;\n</code></pre>\n<p>将上面的代码存为html文件，就会看到<code>div</code>元素在一行，<code>span</code>元素就是独占一行的。</p>\n<p>这个就是css的基本用法。</p>\n<h2 id=\"html%E6%96%87%E4%BB%B6%E5%BC%95%E5%85%A5css%E7%9A%843%E7%A7%8D%E6%96%B9%E5%BC%8F\"><a class=\"header-anchor\" href=\"#html%E6%96%87%E4%BB%B6%E5%BC%95%E5%85%A5css%E7%9A%843%E7%A7%8D%E6%96%B9%E5%BC%8F\">¶</a> html文件引入css的3种方式</h2>\n<pre><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=&quot;utf-8&quot;&gt;\n    &lt;title&gt;网页标题&lt;/title&gt;\n    &lt;meta name=&quot;keywords&quot; content=&quot;文档关键词&quot;&gt;\n    &lt;meta name=&quot;description&quot; content=&quot;文档描述&quot;&gt;\n    &lt;link rel=&quot;shortcut icon&quot; href=&quot;/favicon.ico&quot;&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;main.css&quot; media=&quot;all&quot;&gt; &lt;!-- 方式1：引入外部css文件 --&gt;\n    &lt;!-- 方式2：css块 --&gt;\n    &lt;style&gt;\n    h1 { font-size: 16px; color: red; }\n    &lt;/style&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div class=&quot;text&quot;&gt;命中外部css的样式&lt;/div&gt;\n    &lt;h1&gt;totonoo&lt;/h1&gt;\n    &lt;!-- 方式3：直接写在元素上 --&gt;\n    &lt;div style=&quot;color: green;&quot;&gt;心中的大草原&lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p>建main.css文件</p>\n<pre><code class=\"language-css\">.text {\n  color: #ffcc00;\n}\n</code></pre>\n<h2 id=\"css%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E5%92%8C%E6%9D%83%E9%87%8D\"><a class=\"header-anchor\" href=\"#css%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E5%92%8C%E6%9D%83%E9%87%8D\">¶</a> css的优先级和权重</h2>\n<p>为什么要计算优先级和权重？一个html标签同时命中几个相同的css规则和是，该显示哪条规则。</p>\n<p>优先级就是一个规则，就近处理原则。谁离我最近我用那个样式。“我”是指代html标签，<code>style</code>是写在标签上，所有优先级最高。上面3种方法优先级排序是：3 &gt; 2 &gt; 1。</p>\n<p>权重计算，网上有很详细的算法，说实话我没有搞懂。<code>!important</code>这个表示最高的权重，但是一般在写css的过程，不建议使用，一旦用了<code>!important</code>就表示已经失控了。失控就代表着这个项目基本已经废了。</p>\n<p>这个是我网上找到的最好的理解的了，<a href=\"https://www.w3cplus.com/css/css-specificity-things-you-should-know.html\">原文地址</a>。</p>\n<blockquote>\n<p>权重记忆口诀。从0开始，一个行内样式+1000，一个id+100，一个属性选择器/class或者伪类+10，一个元素名，或者伪元素+1\n不同的权重：权重值高则生效\n相同的权重：以后面出现的选择器为最后规则</p>\n</blockquote>\n<p>div #id .class-name a:hover { color: red }\n1+  100+10 +        1 + 10    = 122</p>\n<p>.class-name a:hover { color: green }\n10 +        1 + 10   = 21</p>\n<pre><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=&quot;utf-8&quot;&gt;\n    &lt;title&gt;网页标题&lt;/title&gt;\n    &lt;meta name=&quot;keywords&quot; content=&quot;文档关键词&quot;&gt;\n    &lt;meta name=&quot;description&quot; content=&quot;文档描述&quot;&gt;\n    &lt;link rel=&quot;shortcut icon&quot; href=&quot;/favicon.ico&quot;&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;main.css&quot; media=&quot;all&quot;&gt; &lt;!-- 方式1：引入外部css文件 --&gt;\n    &lt;!-- 方式2：css块 --&gt;\n    &lt;style&gt;\n    h1 { font-size: 16px; color: red; }\n    div #id .class-name a:hover { color: red }\n    .class-name a:hover { color: green }\n    &lt;/style&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div class=&quot;text&quot;&gt;命中外部css的样式&lt;/div&gt;\n    &lt;h1&gt;totonoo&lt;/h1&gt;\n    &lt;!-- 方式3：直接写在元素上 --&gt;\n    &lt;div style=&quot;color: green;&quot;&gt;心中的大草原&lt;/div&gt;\n    &lt;div&gt;\n      &lt;div id=&quot;id&quot;&gt;\n        &lt;div class=&quot;class-name&quot;&gt;\n          &lt;a href=&quot;#&quot;&gt;我是链接，测试鼠标划过显示的颜色&lt;/a&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p>一般性不会写这么丑陋的规则<code>div #id .class-name a:hover { color: red }</code>，难看又不容易识别。下面写个我平常写的代码。</p>\n<pre><code class=\"language-css\">.news-list { border: 1px #ddd solid; }\n.news-list .item { margin: 0; padding: 0; color: #666; }\n.news-list .item .title { font-size: 16px; }\n.news-list .item .desc { font-size: 14px; color: #999; }\n</code></pre>\n<pre><code class=\"language-html\">&lt;div class=&quot;news-list&quot;&gt;\n  &lt;ul&gt;\n    &lt;li class=&quot;item&quot;&gt;\n      &lt;strong class=&quot;title&quot;&gt;我是标题&lt;/strong&gt;\n      &lt;p class=&quot;desc&quot;&gt;我是简介&lt;/p&gt;\n    &lt;/li&gt;\n    &lt;li class=&quot;item&quot;&gt;\n      &lt;strong class=&quot;title&quot;&gt;我是标题&lt;/strong&gt;\n      &lt;p class=&quot;desc&quot;&gt;我是简介&lt;/p&gt;\n    &lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/div&gt;\n</code></pre>\n<h2 id=\"css%E5%B8%B8%E7%94%A8%E9%80%89%E6%8B%A9%E5%99%A8\"><a class=\"header-anchor\" href=\"#css%E5%B8%B8%E7%94%A8%E9%80%89%E6%8B%A9%E5%99%A8\">¶</a> CSS常用选择器</h2>\n<p>什么叫“选择器”？html里面有很多标签，如果要让所有的<code>h1</code>文字都显示为红色，那么h1就是元素选择器；再来，带有<code>id=&quot;id&quot;</code>的标签文字显示为绿色，那么对应css的id选择器就是<code>#id</code>。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">CSS选择器</th>\n<th style=\"text-align:left\">HTML代码</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">.class-name</td>\n<td style=\"text-align:left\"><code>&lt;div class=&quot;class-name&quot;&gt;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">.class-name a</td>\n<td style=\"text-align:left\"><code>&lt;div class=&quot;class-name&quot;&gt;&lt;a href=&quot;#&quot;&gt;链接&lt;/a&gt;&lt;/div&gt;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">.class-name .sub</td>\n<td style=\"text-align:left\"><code>&lt;div class=&quot;class-name&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;sub&quot;&gt;链接&lt;/a&gt;&lt;/div&gt;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">#id</td>\n<td style=\"text-align:left\"><code>&lt;div id=&quot;id&quot;&gt;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">div</td>\n<td style=\"text-align:left\"><code>&lt;div&gt;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">img</td>\n<td style=\"text-align:left\"><code>&lt;img&gt;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">div img</td>\n<td style=\"text-align:left\"><code>&lt;div&gt;&lt;img&gt;&lt;/div&gt;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">div &gt; img</td>\n<td style=\"text-align:left\"><code>&lt;div&gt;&lt;img&gt;&lt;/div&gt;</code> 不匹配 <code>&lt;div&gt;&lt;span&gt;&lt;img&gt;&lt;/span&gt;&lt;/div&gt;</code></td>\n</tr>\n</tbody>\n</table>\n<p>列举常用的，其他可以自行搜索完整的选择器版本。</p>\n<p>CSS学习主要理解上面的几点基础规则，其他就是记忆部分了。其实常用的属性也不多，下一篇说一下HTML5 + CSS3实战。</p>\n","path":"collection/beginner","pathTitle":"初级教程","navigation":[{"tag":"h2","slug":"%E9%80%9A%E8%BF%87css%E6%9D%A5%E8%BD%AC%E6%8D%A2%E5%9D%97%E7%BA%A7%E5%85%83%E7%B4%A0%E5%92%8C%E5%86%85%E8%81%94%E5%85%83%E7%B4%A0","title":"通过css来转换块级元素和内联元素"},{"tag":"h2","slug":"html%E6%96%87%E4%BB%B6%E5%BC%95%E5%85%A5css%E7%9A%843%E7%A7%8D%E6%96%B9%E5%BC%8F","title":"html文件引入css的3种方式"},{"tag":"h2","slug":"css%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E5%92%8C%E6%9D%83%E9%87%8D","title":"css的优先级和权重"},{"tag":"h2","slug":"css%E5%B8%B8%E7%94%A8%E9%80%89%E6%8B%A9%E5%99%A8","title":"CSS常用选择器"}],"orderIndex":2,"filename":"css-ji-ben-gai-nian-xue-xi"},{"body":"<h1 id=\"%E5%A6%82%E4%BD%95%E7%94%A8css%E5%92%8Chtml%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E9%A1%B5%E9%9D%A2---%E5%B8%83%E5%B1%80\"><a class=\"header-anchor\" href=\"#%E5%A6%82%E4%BD%95%E7%94%A8css%E5%92%8Chtml%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E9%A1%B5%E9%9D%A2---%E5%B8%83%E5%B1%80\">¶</a> 如何用css和html制作一个页面 - 布局</h1>\n<h2 id=\"%E9%A6%96%E5%85%88%E5%85%88%E7%A1%AE%E7%AB%8B%E4%B8%80%E4%B8%AA%E7%9B%AE%E6%A0%87%EF%BC%9A%E5%81%9A%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2%E6%A8%A1%E6%9D%BF\"><a class=\"header-anchor\" href=\"#%E9%A6%96%E5%85%88%E5%85%88%E7%A1%AE%E7%AB%8B%E4%B8%80%E4%B8%AA%E7%9B%AE%E6%A0%87%EF%BC%9A%E5%81%9A%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2%E6%A8%A1%E6%9D%BF\">¶</a> 首先先确立一个目标：做一个博客模板</h2>\n<p>博客模板一般包含3个页面，首页，文章列表，文章详细页，我自己做了一个简单的页面，如下图所示：\n<img src=\"./3/index.jpg\" alt=\"index.jpg\">\n<img src=\"./3/list.jpg\" alt=\"list.jpg\">\n<img src=\"./3/article.jpg\" alt=\"article.jpg\"></p>\n<p>我们先观察这3张图片，找到共同的部分，尽可能的多一些复用。很明显每张图片都是三种颜色分成3部分。从左到右，分别是：绿色、灰色、白色。实际是内容不同的部分就是最右侧白色的部分。所以确定是 <code>左中右</code> 三栏布局。</p>\n<p>先找一个文件夹建立项目，为了简单，我在桌面建立了一个文件夹 <code>blog</code> ，里面文件结构如下：</p>\n<pre><code>|-- blog\n    |-- assets\n        |-- images // 图片文件\n        |-- scripts // JS文件\n        |-- styles // css文件\n            |-- article.css // 文章页样式\n            |-- global.css // 全局样式\n            |-- index.css // 首页样式\n            |-- list.css // 列表页样式\n    |-- article.html // 文章\n    |-- index.html // 首页\n    |-- list.html // 列表\n</code></pre>\n<p>文件建好之后，开始编辑代码，处理第一个页面 <code>首页</code> 。\nindex.html插入初始结构：</p>\n<pre><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n  &lt;head&gt;\n    &lt;meta charset=&quot;utf-8&quot;&gt;\n    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1.0&quot;&gt;\n    &lt;link rel=&quot;icon&quot; href=&quot;/favicon.ico&quot;&gt;\n    &lt;title&gt;首页 - 我的博客&lt;/title&gt;\n    &lt;meta name=&quot;keywords&quot; content=&quot;我的博客&quot;/&gt;\n    &lt;meta name=&quot;description&quot; content=&quot;我的博客简介。&quot;/&gt;\n    &lt;link href=&quot;assets/styles/global.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt; &lt;!-- 引入全局css --&gt;\n    &lt;link href=&quot;assets/styles/index.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt; &lt;!-- 引入当前页面css --&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div class=&quot;layout&quot;&gt;\n      &lt;div class=&quot;left&quot;&gt;left&lt;/div&gt;\n      &lt;div class=&quot;center&quot;&gt;center&lt;/div&gt;\n      &lt;div class=&quot;right&quot;&gt;right&lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p>因为布局是要复用的部分，所以跟布局相关的css我们写在 <code>global.css</code> 中。因为css3已经出来很久了，大部分浏览器也支持的比较好，所以我们先用css3的方式来布局，代码如下：</p>\n<pre><code class=\"language-css\">@charset &quot;utf-8&quot;;\n\nhtml, body {\n\twidth: 100%; /* 这里是必须的 */\n\theight: 100%; /* 这里是必须的 */\n\tmargin: 0;\n\tpadding: 0;\n}\n\n.layout {\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: flex; /* css3 flex 关键点 */\n}\n.left {\n\twidth: 72px;\n\tbackground-color: #26b192;\n}\n.center {\n\twidth: 489px;\n\tborder-right: 1px #e6ecf1 solid;\n\tbackground-color: #f5f7f9;\n}\n.right {\n\tflex: 1; /* 将剩余的宽度都给到.right */\n}\n</code></pre>\n<p>问题1：宽度和高度100%的规则是怎么样的？\n宽度和高度的100%是相对当前元素的父级来说， <code>.layout</code> 的父级就是 <code>body</code> ， <code>body</code> 的父级就是 <code>html</code> ，如果父级没有宽度和高度，对应的100%也就没有高度和宽度，可以删除上面代码的第四行和第五行，验证一下。</p>\n<p>问题2： <code>.center</code> 的实际宽度是多少？\n这里就要引入一个概念就是是 <code>CSS盒子模型</code> 。CSS盒子模型其实就是描述的是一个元素在页面中所占用的位置或者说是占用的面积有多大。\n<img src=\"./3/1.png\" alt=\"box.png\">\ncss3中，如果显式的设置了 <code>box-sizing: border-box;</code> ，那么.box的宽度和高度将不在包含padding和border，如：</p>\n<pre><code class=\"language-css\">.box { \n  width: 100px;\n  height: 100px; \n  border: 10px #26b192 solid; \n  padding: 20px; \n  margin: 30px; \n  box-sizing: border-box; \n}\n/* box所占用的宽就是100 + 30 + 30 = 160px，高也是100 + 30 + 30 = 160px */\n\n.box { \n  width: 100px;\n  height: 100px; \n  border: 10px #26b192 solid; \n  padding: 20px; \n  margin: 30px;\n}\n/* box所占用的宽就是100 + 20 + 20 + 10 + 10 + 30 + 30 = 220px，高也是100 + 20 + 20 + 10 + 10 + 30 + 30 = 220px */\n</code></pre>\n<h2 id=\"%E4%BD%BF%E7%94%A8float%E6%96%B9%E5%BC%8F%E6%9D%A5%E5%B8%83%E5%B1%80\"><a class=\"header-anchor\" href=\"#%E4%BD%BF%E7%94%A8float%E6%96%B9%E5%BC%8F%E6%9D%A5%E5%B8%83%E5%B1%80\">¶</a> 使用float方式来布局</h2>\n<pre><code class=\"language-css\">@charset &quot;utf-8&quot;;\n\nhtml, body {\n\twidth: 100%;\n\theight: 100%;\n\tmargin: 0;\n\tpadding: 0;\n}\n\n.layout {\n\twidth: 100%;\n\theight: 100%;\n\tfloat: left;\n\tclear: both;\n}\n.left {\n\twidth: 72px;\n\tbackground-color: #26b192;\n\tfloat: left;\n\theight: 100%;\n}\n.center {\n\twidth: 489px;\n\tborder-right: 1px #e6ecf1 solid;\n\tbackground-color: #f5f7f9;\n\tfloat: left;\n\theight: 100%;\n}\n.right {\n\tfloat: right;\n\theight: 100%;\n}\n</code></pre>\n<p>可以对比下2次的代码，实现的效果差不多，但是css2的方式是有缺陷的，.right的宽度不好控制。如果要保证3块一直在一行，需要用position来实现。</p>\n<p>缺陷1：BFC(Block Formatting Context)，这个是高频面试题\n当float值为left、right时，会触发BFC模式，表现为，父级高度塌陷，margin重叠等问题。</p>\n<p>缺陷2：.right的宽度不好控制\n各种客户端屏幕大小不一样，虽然left和center的宽度是固定，总宽度不定，所以.right宽度也就不固定</p>\n<h2 id=\"%E7%94%A8position%E7%9A%84%E6%96%B9%E5%BC%8F%E6%9D%A5%E5%B8%83%E5%B1%80\"><a class=\"header-anchor\" href=\"#%E7%94%A8position%E7%9A%84%E6%96%B9%E5%BC%8F%E6%9D%A5%E5%B8%83%E5%B1%80\">¶</a> 用position的方式来布局</h2>\n<p>这些页面有一个典型的表现，也就是left和center的高度是固定的，跟屏幕一样高，只有right部分的高度不固定，可能长可能短。如下：</p>\n<pre><code class=\"language-css\">@charset &quot;utf-8&quot;;\n\nhtml, body {\n\twidth: 100%;\n\theight: 100%;\n\tmargin: 0;\n\tpadding: 0;\n}\n\n.layout {\n\twidth: 100%;\n\theight: 100%;\n\tposition: relative;\n}\n.left {\n\twidth: 72px;\n\tbackground-color: #26b192;\n\tfloat: left;\n\theight: 100%;\n}\n.center {\n\twidth: 489px;\n\tborder-right: 1px #e6ecf1 solid;\n\tbackground-color: #f5f7f9;\n\tfloat: left;\n\theight: 100%;\n}\n.right {\n\tposition: absolute;\n\tword-break: break-all;\n\tleft: 562px;\n\ttop: 0;\n}\n</code></pre>\n<h2 id=\"%E6%80%BB%E7%BB%93\"><a class=\"header-anchor\" href=\"#%E6%80%BB%E7%BB%93\">¶</a> 总结</h2>\n<p>综合上面的来看，最简洁的是css3的布局方式。但是低版本浏览器不兼容。如果不考虑兼容问题，建议直接使用css3方式来布局。现在大部分的已经没有兼容性的要求了，但是政府网站，机关网站可能会有需求。</p>\n","path":"collection/beginner","pathTitle":"初级教程","navigation":[{"tag":"h1","slug":"%E5%A6%82%E4%BD%95%E7%94%A8css%E5%92%8Chtml%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E9%A1%B5%E9%9D%A2---%E5%B8%83%E5%B1%80","title":"如何用css和html制作一个页面 - 布局"},{"tag":"h2","slug":"%E9%A6%96%E5%85%88%E5%85%88%E7%A1%AE%E7%AB%8B%E4%B8%80%E4%B8%AA%E7%9B%AE%E6%A0%87%EF%BC%9A%E5%81%9A%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2%E6%A8%A1%E6%9D%BF","title":"首先先确立一个目标：做一个博客模板"},{"tag":"h2","slug":"%E4%BD%BF%E7%94%A8float%E6%96%B9%E5%BC%8F%E6%9D%A5%E5%B8%83%E5%B1%80","title":"使用float方式来布局"},{"tag":"h2","slug":"%E7%94%A8position%E7%9A%84%E6%96%B9%E5%BC%8F%E6%9D%A5%E5%B8%83%E5%B1%80","title":"用position的方式来布局"},{"tag":"h2","slug":"%E6%80%BB%E7%BB%93","title":"总结"}],"orderIndex":3,"filename":"ru-he-yong-css-he-html-zhi-zuo-yi-ge-ye-mian-----bu-ju"},{"body":"<h1 id=\"%E5%A6%82%E4%BD%95%E7%94%A8css%E5%92%8Chtml%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E9%A1%B5%E9%9D%A2---%E5%85%A8%E5%B1%80%E8%AE%BE%E7%BD%AE\"><a class=\"header-anchor\" href=\"#%E5%A6%82%E4%BD%95%E7%94%A8css%E5%92%8Chtml%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E9%A1%B5%E9%9D%A2---%E5%85%A8%E5%B1%80%E8%AE%BE%E7%BD%AE\">¶</a> 如何用css和html制作一个页面 - 全局设置</h1>\n<p>一般浏览器会带一些默认的样式，比如h1-h6的字号大小，并且是加粗状态。html、body、ul、ol等有默认有边距，a链接是蓝色，且带下划线。一般来说，这些样式和设计稿会相差的比较远，所以我们需要一个全局设置将这些默认样式覆盖掉。</p>\n<h2 id=\"%E6%96%B9%E5%BC%8F%E4%B8%80%EF%BC%8C%E4%BD%BF%E7%94%A8-normalize.css\"><a class=\"header-anchor\" href=\"#%E6%96%B9%E5%BC%8F%E4%B8%80%EF%BC%8C%E4%BD%BF%E7%94%A8-normalize.css\">¶</a> 方式一，使用 Normalize.css</h2>\n<p>官方说的有点：</p>\n<ol>\n<li>保留有用的浏览器默认值而不是删除它们。</li>\n<li>规范化各种HTML元素的样式。</li>\n<li>纠正错误和常见的浏览器不一致。</li>\n<li>通过微妙的改进提高可用性。</li>\n<li>使用注释和详细文档解释代码。</li>\n</ol>\n<p>官方网站：<a href=\"http://necolas.github.io/normalize.css/\">normalize.css</a></p>\n<h2 id=\"%E6%96%B9%E5%BC%8F%E4%BA%8C%EF%BC%8C%E6%89%BE%E4%B8%80%E4%B8%AAreset.css\"><a class=\"header-anchor\" href=\"#%E6%96%B9%E5%BC%8F%E4%BA%8C%EF%BC%8C%E6%89%BE%E4%B8%80%E4%B8%AAreset.css\">¶</a> 方式二，找一个reset.css</h2>\n<p>这个可以参考大厂的网站，看一下就行了，下面贴一个淘宝的吧。</p>\n<pre><code class=\"language-css\">blockquote,body,button,dd,dl,dt,fieldset,form,h1,h2,h3,h4,h5,h6,hr,input,legend,li,ol,p,pre,td,textarea,th,ul {margin:0;padding:0}  \nh1,h2,h3,h4,h5,h6 {font-size:100%}  \naddress,cite,dfn,em,var {font-style:normal}  \ncode,kbd,pre,samp {font-family:courier new,courier,monospace}  \nsmall {font-size:12px}  \nol,ul {list-style:none}  \na {text-decoration:none}  \na:hover {text-decoration:underline}  \nsup {vertical-align:text-top}  \nsub {vertical-align:text-bottom}  \nlegend {color:#000}  \nfieldset,img {border:0}  \nbutton,input,select,textarea {font-size:100%}  \ntable {border-collapse:collapse;border-spacing:0}\n</code></pre>\n<h2 id=\"%E6%96%B9%E5%BC%8F%E4%B8%89%EF%BC%8C%E8%87%AA%E5%B7%B1%E5%86%99%E4%B8%80%E4%B8%AA\"><a class=\"header-anchor\" href=\"#%E6%96%B9%E5%BC%8F%E4%B8%89%EF%BC%8C%E8%87%AA%E5%B7%B1%E5%86%99%E4%B8%80%E4%B8%AA\">¶</a> 方式三，自己写一个</h2>\n<pre><code class=\"language-css\">html,body {\n\twidth: 100%;\n\theight: 100%;\n\tmargin: 0;\n\tpadding: 0;\n\tbox-sizing: border-box\n}\n\nbody {\n\tbackground-color: #ffffff;\n\tfont-family: &quot;Open Sans&quot;,Arial,&quot;Hiragino Sans GB&quot;,&quot;Hiragino Sans GB W3&quot;,&quot;Microsoft YaHei&quot;,&quot;微软雅黑&quot;,&quot;STHeiti&quot;,SimSun,sans-serif;\n\tfont-size: 12px;\n\tcolor: #666666;\n\tline-height: 180%\n}\n\na {\n\tfont-size: 12px;\n\tcolor: #ee3a3d;\n\ttext-decoration: none;\n\ttransition: all 300ms\n}\n\na:link,a:visited {\n\tfont-size: 12px;\n\tcolor: #ee3a3d;\n\ttext-decoration: none\n}\n\na:hover {\n\tcolor: #09f\n}\n\na:active {\n\tcolor: #09f\n}\n\nimg {\n\tborder: 0\n}\n\nul,ol,li,dl,dd,dt,h1,h2,h3,h4,h5,h6 {\n\tmargin: 0;\n\tpadding: 0;\n\tlist-style: none\n}\n\ninput,select,button,textarea {\n\tfont-family: &quot;Open Sans&quot;,Arial,&quot;Hiragino Sans GB&quot;,&quot;Hiragino Sans GB W3&quot;,&quot;Microsoft YaHei&quot;,&quot;微软雅黑&quot;,&quot;STHeiti&quot;,SimSun,sans-serif;\n\tfont-size: 12px;\n\tcolor: #666666\n}\n\ninput::placeholder,select::placeholder,button::placeholder,textarea::placeholder {\n\tcolor: #999999\n}\n</code></pre>\n<p>只需要搞清楚目的，是为了消除浏览器的默认样式和加入一些自己的全局样式，如通用的文字大小，链接各种状态的颜色，字体，默认文字行高等，基本就算是搞定了。</p>\n","path":"collection/beginner","pathTitle":"初级教程","navigation":[{"tag":"h1","slug":"%E5%A6%82%E4%BD%95%E7%94%A8css%E5%92%8Chtml%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E9%A1%B5%E9%9D%A2---%E5%85%A8%E5%B1%80%E8%AE%BE%E7%BD%AE","title":"如何用css和html制作一个页面 - 全局设置"},{"tag":"h2","slug":"%E6%96%B9%E5%BC%8F%E4%B8%80%EF%BC%8C%E4%BD%BF%E7%94%A8-normalize.css","title":"方式一，使用 Normalize.css"},{"tag":"h2","slug":"%E6%96%B9%E5%BC%8F%E4%BA%8C%EF%BC%8C%E6%89%BE%E4%B8%80%E4%B8%AAreset.css","title":"方式二，找一个reset.css"},{"tag":"h2","slug":"%E6%96%B9%E5%BC%8F%E4%B8%89%EF%BC%8C%E8%87%AA%E5%B7%B1%E5%86%99%E4%B8%80%E4%B8%AA","title":"方式三，自己写一个"}],"orderIndex":4,"filename":"ru-he-yong-css-he-html-zhi-zuo-yi-ge-ye-mian-----quan-ju-she-zhi"},{"body":"<h1 id=\"%E5%A6%82%E4%BD%95%E7%94%A8css%E5%92%8Chtml%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E9%A1%B5%E9%9D%A2---%E7%BB%86%E8%8A%82\"><a class=\"header-anchor\" href=\"#%E5%A6%82%E4%BD%95%E7%94%A8css%E5%92%8Chtml%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E9%A1%B5%E9%9D%A2---%E7%BB%86%E8%8A%82\">¶</a> 如何用css和html制作一个页面 - 细节</h1>\n<p>这个一节讲的是如何一比一还原设计稿。在布局一节里面，我们有三张图，现在一比一做成html。也算是css+html的终章。过程中还是使用css3，不再特别说明css版本。</p>\n<p>用文字来描述一个页面的开发过程，确实比较痛苦。尽量在代码中添加注释。以下是首页的css文件内容和首页html文件内容。\n<code>index.html</code></p>\n<pre><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n  &lt;head&gt;\n    &lt;meta charset=&quot;utf-8&quot;&gt;\n    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1.0&quot;&gt;\n    &lt;link rel=&quot;icon&quot; href=&quot;/favicon.ico&quot;&gt;\n    &lt;title&gt;首页 - 我的博客&lt;/title&gt;\n    &lt;meta name=&quot;keywords&quot; content=&quot;我的博客&quot;/&gt;\n    &lt;meta name=&quot;description&quot; content=&quot;我的博客简介。&quot;/&gt;\n    &lt;link href=&quot;assets/styles/global.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt; &lt;!-- 引入全局css --&gt;\n    &lt;link href=&quot;assets/styles/index.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt; &lt;!-- 引入当前页面css --&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;!-- 一般性的代码规范里，一般不使用id做样式控制，样式控制都是用class来实现 --&gt;\n    &lt;div class=&quot;layout&quot;&gt;\n      &lt;div class=&quot;left&quot;&gt;\n        &lt;div class=&quot;userinfo&quot;&gt;\n          &lt;span class=&quot;char&quot;&gt;w&lt;/span&gt;\n        &lt;/div&gt;\n        &lt;!-- 左侧菜单：开始 --&gt;\n        &lt;nav class=&quot;main-nav&quot;&gt;\n          &lt;ul&gt;\n            &lt;li&gt;\n              &lt;a href=&quot;#&quot;&gt;\n                &lt;i class=&quot;icon icon-book&quot;&gt;&lt;/i&gt;\n                &lt;span&gt;文集&lt;/span&gt;\n              &lt;/a&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n              &lt;a href=&quot;#&quot;&gt;\n                &lt;i class=&quot;icon icon-doc&quot;&gt;&lt;/i&gt;\n                &lt;span&gt;文档&lt;/span&gt;\n              &lt;/a&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n              &lt;a href=&quot;#&quot;&gt;\n                &lt;i class=&quot;icon icon-commit&quot;&gt;&lt;/i&gt;\n                &lt;span&gt;评论&lt;/span&gt;\n              &lt;/a&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n              &lt;a href=&quot;#&quot;&gt;\n                &lt;i class=&quot;icon icon-setting&quot;&gt;&lt;/i&gt;\n                &lt;span&gt;设置&lt;/span&gt;\n              &lt;/a&gt;\n            &lt;/li&gt;\n          &lt;/ul&gt;\n        &lt;/nav&gt;\n        &lt;!-- 左侧菜单：结束 --&gt;\n      &lt;/div&gt;\n      &lt;div class=&quot;center&quot;&gt;\n        &lt;!-- 中间标题：开始 --&gt;\n        &lt;div class=&quot;center-title&quot;&gt;\n          &lt;div class=&quot;inner&quot;&gt;\n            &lt;i class=&quot;icon icon-book-1&quot;&gt;&lt;/i&gt;\n            &lt;h1&gt;前端学习笔记&lt;/h1&gt;\n            &lt;button&gt;&lt;i class=&quot;icon icon-search&quot;&gt;&lt;/i&gt;&lt;/button&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;!-- 中间标题：结束 --&gt;\n        &lt;!-- 中间菜单：开始 --&gt;\n        &lt;nav class=&quot;sub-nav&quot;&gt;\n          &lt;ul&gt;\n            &lt;!-- normal current组合控制第一个菜单的颜色 --&gt;\n            &lt;li class=&quot;normal current&quot;&gt;&lt;a href=&quot;list.html&quot;&gt;&lt;strong&gt;html&lt;/strong&gt;&lt;span class=&quot;num&quot;&gt;20&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;\n            &lt;li class=&quot;normal&quot;&gt;&lt;a href=&quot;list.html&quot;&gt;&lt;strong&gt;css&lt;/strong&gt;&lt;span class=&quot;num&quot;&gt;12&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;\n            &lt;li class=&quot;normal&quot;&gt;&lt;a href=&quot;list.html&quot;&gt;&lt;strong&gt;javascript&lt;/strong&gt;&lt;span class=&quot;num&quot;&gt;3&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;\n            &lt;li class=&quot;normal&quot;&gt;&lt;a href=&quot;list.html&quot;&gt;&lt;strong&gt;vue&lt;/strong&gt;&lt;span class=&quot;num&quot;&gt;0&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;\n            &lt;li class=&quot;normal&quot;&gt;&lt;a href=&quot;list.html&quot;&gt;&lt;strong&gt;react&lt;/strong&gt;&lt;span class=&quot;num&quot;&gt;6&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;\n            &lt;li class=&quot;normal&quot;&gt;&lt;a href=&quot;list.html&quot;&gt;&lt;strong&gt;webpack&lt;/strong&gt;&lt;span class=&quot;num&quot;&gt;34&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;\n            &lt;li class=&quot;normal&quot;&gt;&lt;a href=&quot;list.html&quot;&gt;&lt;strong&gt;nodejs&lt;/strong&gt;&lt;span class=&quot;num&quot;&gt;21&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;\n          &lt;/ul&gt;\n        &lt;/nav&gt;\n        &lt;!-- 中间菜单：结束 --&gt;\n        &lt;!-- 版权：开始 --&gt;\n        &lt;div class=&quot;copy&quot;&gt;\n          Copyright &amp;copy; totonoo.com\n        &lt;/div&gt;\n        &lt;!-- 版权：结束 --&gt;\n      &lt;/div&gt;\n      &lt;div class=&quot;right&quot;&gt;\n        &lt;!-- 首页：开始 --&gt;\n        &lt;div class=&quot;index-main&quot;&gt;\n\n          &lt;!-- item：开始 --&gt;\n          &lt;div class=&quot;item&quot;&gt;\n            &lt;h2&gt;\n              &lt;strong&gt;html&lt;/strong&gt;\n              &lt;a href=&quot;list.html&quot;&gt;更多&lt;/a&gt;\n            &lt;/h2&gt;\n            &lt;div class=&quot;item-list&quot;&gt;\n              &lt;ul&gt;\n                &lt;li&gt;&lt;a href=&quot;article.html&quot; title=&quot;LaTeX数学公式语法大全&quot;&gt;LaTeX数学公式语法大全&lt;/a&gt;&lt;span class=&quot;date&quot;&gt;2020-06-05&lt;/span&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=&quot;article.html&quot; title=&quot;CSS动画是可以暂停的&quot;&gt;CSS动画是可以暂停的&lt;/a&gt;&lt;span class=&quot;date&quot;&gt;2020-04-04&lt;/span&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=&quot;article.html&quot; title=&quot;chrome translation闪烁BUG&quot;&gt;chrome translation闪烁BUG&lt;/a&gt;&lt;span class=&quot;date&quot;&gt;2020-03-15&lt;/span&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=&quot;article.html&quot; title=&quot;canvas小tip-下载二维码、图片加水印&quot;&gt;canvas小tip-下载二维码、图片加水印&lt;/a&gt;&lt;span class=&quot;date&quot;&gt;2020-03-08&lt;/span&gt;&lt;/li&gt;\n                &lt;!-- 设计稿上，如果标题过长用 ... 代替，所以需要用title属性来显示全文，鼠标移到连接上看效果 --&gt;\n                &lt;li&gt;&lt;a href=&quot;article.html&quot; title=&quot;巧用CSS3的calc()宽度计算做响应模式布局，长长长&quot;&gt;巧用CSS3的calc()宽度计算做响应模式布局，长长长&lt;/a&gt;&lt;span class=&quot;date&quot;&gt;2020-02-10&lt;/span&gt;&lt;/li&gt;\n              &lt;/ul&gt;\n            &lt;/div&gt;\n          &lt;/div&gt;\n          &lt;!-- item：结束 --&gt;\n\n          &lt;div class=&quot;item&quot;&gt;\n            &lt;h2&gt;\n              &lt;strong&gt;CSS&lt;/strong&gt;\n              &lt;a href=&quot;list.html&quot;&gt;更多&lt;/a&gt;\n            &lt;/h2&gt;\n            &lt;div class=&quot;item-list&quot;&gt;\n              &lt;ul&gt;\n                &lt;li&gt;&lt;a href=&quot;article.html&quot; title=&quot;LaTeX数学公式语法大全&quot;&gt;LaTeX数学公式语法大全&lt;/a&gt;&lt;span class=&quot;date&quot;&gt;2020-06-05&lt;/span&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=&quot;article.html&quot; title=&quot;CSS动画是可以暂停的&quot;&gt;CSS动画是可以暂停的&lt;/a&gt;&lt;span class=&quot;date&quot;&gt;2020-04-04&lt;/span&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=&quot;article.html&quot; title=&quot;chrome translation闪烁BUG&quot;&gt;chrome translation闪烁BUG&lt;/a&gt;&lt;span class=&quot;date&quot;&gt;2020-03-15&lt;/span&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=&quot;article.html&quot; title=&quot;canvas小tip-下载二维码、图片加水印&quot;&gt;canvas小tip-下载二维码、图片加水印&lt;/a&gt;&lt;span class=&quot;date&quot;&gt;2020-03-08&lt;/span&gt;&lt;/li&gt;\n                &lt;!-- 设计稿上，如果标题过长用 ... 代替，所以需要用title属性来显示全文，鼠标移到连接上看效果 --&gt;\n                &lt;li&gt;&lt;a href=&quot;article.html&quot; title=&quot;巧用CSS3的calc()宽度计算做响应模式布局，长长长&quot;&gt;巧用CSS3的calc()宽度计算做响应模式布局，长长长&lt;/a&gt;&lt;span class=&quot;date&quot;&gt;2020-02-10&lt;/span&gt;&lt;/li&gt;\n              &lt;/ul&gt;\n            &lt;/div&gt;\n          &lt;/div&gt;\n\n          &lt;div class=&quot;item&quot;&gt;\n            &lt;h2&gt;\n              &lt;strong&gt;JAVASCRIPT&lt;/strong&gt;\n              &lt;a href=&quot;list.html&quot;&gt;更多&lt;/a&gt;\n            &lt;/h2&gt;\n            &lt;div class=&quot;item-list&quot;&gt;\n              &lt;ul&gt;\n                &lt;li&gt;&lt;a href=&quot;article.html&quot; title=&quot;LaTeX数学公式语法大全&quot;&gt;LaTeX数学公式语法大全&lt;/a&gt;&lt;span class=&quot;date&quot;&gt;2020-06-05&lt;/span&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=&quot;article.html&quot; title=&quot;CSS动画是可以暂停的&quot;&gt;CSS动画是可以暂停的&lt;/a&gt;&lt;span class=&quot;date&quot;&gt;2020-04-04&lt;/span&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=&quot;article.html&quot; title=&quot;chrome translation闪烁BUG&quot;&gt;chrome translation闪烁BUG&lt;/a&gt;&lt;span class=&quot;date&quot;&gt;2020-03-15&lt;/span&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=&quot;article.html&quot; title=&quot;canvas小tip-下载二维码、图片加水印&quot;&gt;canvas小tip-下载二维码、图片加水印&lt;/a&gt;&lt;span class=&quot;date&quot;&gt;2020-03-08&lt;/span&gt;&lt;/li&gt;\n                &lt;!-- 设计稿上，如果标题过长用 ... 代替，所以需要用title属性来显示全文，鼠标移到连接上看效果 --&gt;\n                &lt;li&gt;&lt;a href=&quot;article.html&quot; title=&quot;巧用CSS3的calc()宽度计算做响应模式布局，长长长&quot;&gt;巧用CSS3的calc()宽度计算做响应模式布局，长长长&lt;/a&gt;&lt;span class=&quot;date&quot;&gt;2020-02-10&lt;/span&gt;&lt;/li&gt;\n              &lt;/ul&gt;\n            &lt;/div&gt;\n          &lt;/div&gt;\n\n          &lt;!-- 当没有数据的时候用这种样式展示 --&gt;\n          &lt;div class=&quot;item&quot;&gt;\n            &lt;h2&gt;\n              &lt;strong&gt;VUE&lt;/strong&gt;\n            &lt;/h2&gt;\n            &lt;div class=&quot;item-list&quot;&gt;\n              &lt;ul&gt;\n                &lt;li class=&quot;empty&quot;&gt;暂无数据&lt;/li&gt;\n              &lt;/ul&gt;\n            &lt;/div&gt;\n          &lt;/div&gt;\n\n        &lt;/div&gt;\n        &lt;!-- 首页：结束 --&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p><code>global.css</code></p>\n<pre><code class=\"language-css\">@charset &quot;utf-8&quot;;\n\n/* reset 开始 */\nhtml, body {\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  background-color: #ffffff;\n  font-family: &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Hiragino Sans GB W3&quot;, &quot;Microsoft YaHei&quot;, &quot;微软雅黑&quot;, &quot;STHeiti&quot;, SimSun, sans-serif; /* 设置字体 */\n  color: #666666; /* 设置全局文字颜色 */\n  line-height: 180%; /* 设置文字行高 */\n}\n\n/* 设置链接文本 */\n/* 默认状态 */\na {\n  color: #26b192;\n  text-decoration: none;\n  transition: color 300ms; /* 设置连接的交互动画 */\n}\n/* 默认状态 访问过的状态 */\na:link, a:visited {\n  color: #26b192;\n  text-decoration: none\n}\n/* 移上的状态 */\na:hover {\n  color: #015845;\n}\n/* 按下的状态 */\na:active {\n  color: #015845\n}\n\n/* 去掉链接图片的边框 */\nimg {\n  border: 0;\n}\n\n/* 重置下列元素 */\nul, ol, li, dl, dd, dt, h1, h2, h3, h4, h5, h6 {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\n/* 重置表单元素 */\ninput, select, button, textarea {\n  font-family: &quot;Open Sans&quot;,Arial,&quot;Hiragino Sans GB&quot;,&quot;Hiragino Sans GB W3&quot;,&quot;Microsoft YaHei&quot;,&quot;微软雅黑&quot;,&quot;STHeiti&quot;,SimSun,sans-serif;\n  color: #666666;\n}\n\ninput::placeholder, select::placeholder, button::placeholder, textarea::placeholder {\n  color: #999999\n}\n\n/* reset 结束 */\n\n/* css颜色的表示方式有 #ffffff：白色 rgb(255, 255, 255)：白色 rgba(255,255,255, 0.6)：白色带0.6的透明度 */\n\n/* 布局 */\n.layout {\n  width: 100%;\n  height: 100%;\n  display: flex;\n}\n.left {\n  width: 72px;\n  background-color: #26b192;\n}\n.center {\n  width: 489px;\n  border-right: 1px #e6ecf1 solid;\n  background-color: #f5f7f9;\n  display: flex;\n  flex-direction: column;\n}\n.right {\n  flex: 1; /* 除去left和center的宽度，剩余部分全部分给right */\n  height: 100%;\n  overflow: auto; /* 自动显示滚动条，若内容的宽度和高度超过了元素的宽度和高度则显示滚动条，否则不显示 overflow-x 为横向，overflow-y 为纵向*/\n}\n\n.userinfo {\n  padding: 15px;\n}\n.userinfo .char {\n  width: 42px; /* 元素宽度 */\n  height: 42px; /* 元素宽高度 */\n  display: block; /* 内联元素转换成块级元素 */\n  border-radius: 100%; /* 圆角 如果宽和高相等 100% 表示圆形，不相等则是椭圆 */\n  background-color: #e4e4e4; /* 背景颜色 */\n  text-transform: uppercase; /* 文本大写 */\n  color: #26b192; /* 文本颜色 */\n  font-size: 18px; /* 文本大小 */\n  text-align: center; /* 对齐方式：居中 */\n  line-height: 42px; /* 文本行高 */\n}\n\n.main-nav {\n  padding-top: 10px;\n}\n\n.main-nav a {\n  display: block; /* 内联元素转换成块级元素，独占一行 */\n  color: #e4e4e4; /* 文本颜色 */\n  text-align: center; /* 对齐方式：居中 */\n  transition: all 300ms; /* 状态切换时，动画效果 */\n  padding: 10px 0;\n}\n.main-nav a:hover {\n  background-color: rgba(0,0,0, 0.24);\n}\n.main-nav a span {\n  display: block;\n}\n\n/* 雪碧图做图标 */\n.icon {\n  width: 36px;\n  height: 36px;\n  background-image: url(../images/icon.png); /* 背景图片 */\n  background-repeat: no-repeat; /* 背景的平铺方式：不平铺 */\n  display: inline-block; /* 保留内联元素和块级元素的特点 */\n}\n.icon-book {\n  background-position: -18px -18px; /* 定位背景：以背景图的左上为原点，设置x轴，y轴的距离 */\n}\n.icon-doc {\n  background-position: -90px -18px;\n}\n.icon-commit {\n  background-position: -162px -18px;\n}\n.icon-setting {\n  background-position: -234px -18px;\n}\n.icon-book-1 {\n  background-position: -306px -18px;\n}\n.icon-search {\n  background-position: -378px -18px;\n}\n\n.sub-nav {\n  flex: 1;\n  padding: 30px 0 30px 160px;\n}\n.sub-nav .normal {\n  border-bottom: 1px #e6ecf1 solid;\n}\n.sub-nav .normal a {\n  display: block;\n  line-height: 46px;\n  display: flex;\n  text-transform: uppercase;\n  color: #666666;\n}\n.sub-nav .normal a:hover {\n  background-color: rgba(0,0,0, 0.04); /* 鼠标移上去时的样式 */\n}\n.sub-nav .normal strong {\n  flex: 1;\n  font-weight: normal;\n  padding-left: 5px;\n}\n.sub-nav .normal .num {\n  font-size: 14px;\n  color: #cccccc;\n  padding: 0 30px;\n}\n.sub-nav .current a {\n  color: #26b192;\n}\n\n.center-title {\n  padding-left: 160px;\n}\n.center-title .icon-book-1 {\n  width: 52px;\n  height: 52px;\n  background-color: #26b192;\n  border-radius: 4px;\n  background-position: -294px -12px;\n  margin-left: 5px;\n}\n.center-title .inner {\n  border-bottom: 1px #e6ecf1 solid;\n  display: flex;\n  align-items: center;\n  padding: 25px 0;\n}\n.center-title h1 {\n  flex: 1;\n  font-size: 18px;\n  font-weight: normal;\n  padding-left: 15px;\n}\n.center-title button {\n  border: 0;\n  background: no-repeat;\n  cursor: pointer;\n  padding: 0 30px;\n}\n\n.copy {\n  text-align: center;\n  font-size: 12px;\n  padding: 10px 0;\n  color: #999999;\n}\n</code></pre>\n<p><code>index.css</code></p>\n<pre><code class=\"language-css\">@charset &quot;utf-8&quot;;\n\n.index-main {\n  padding: 30px; /* 内容和边框之间的空白 */\n  display: grid; /* 网格布局 */\n  grid-gap: 30px; /* 网格间隙 */\n  grid-template-columns: 50% 50%; /* 一排放俩 */\n  margin-right: 30px; /* 边框与边框之间的空白 */\n}\n\n.index-main .item {\n  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.1); /* 阴影 */\n  border: 1px rgb(220, 220, 220) solid; /* 线框 */\n  box-sizing: border-box; /* 设置盒子模式 */\n}\n.index-main .item h2 {\n  border-bottom: 1px rgb(220, 220, 220) solid; /* 下方线条 */\n  line-height: 52px; /* 文本行高 */\n  padding: 0 30px;\n  display: flex;\n  font-weight: normal; /* 去掉加粗 */\n}\n.index-main .item h2 strong {\n  flex: 1;\n  text-transform: uppercase; /* 设置文字大写 */\n  font-size: 18px;\n}\n.index-main .item h2 a {\n  font-size: 16px;\n}\n/* 添加更多前面的 + 放在css里面，便于统一控制 */\n.index-main .item h2 a::before {\n  content: &quot;+&quot;;\n}\n.index-main .item-list {\n  padding: 30px;\n}\n/* li的布局 */\n.index-main .item-list li {\n  display: flex;\n}\n/* 链接 */\n.index-main .item-list li a {\n  flex: 1;\n  overflow: hidden; /* 溢出隐藏 */\n  text-overflow: ellipsis; /* 隐藏的文字用 ...代替 */\n  white-space: nowrap; /* 文字不换行，一般这3个属性是一套效果，缺一不可 */\n}\n/* 日期 */\n.index-main .item-list li .date {\n  font-size: 14px;\n  color: #cccccc;\n  padding-left: 15px;\n}\n\n/* 空样式覆盖默认的li的样式 */\n.index-main .item-list .empty {\n  width: 100%;\n  font-size: 14px;\n  color: #cccccc;\n  justify-content: center;\n}\n</code></pre>\n<p>更多文件内容查看github仓库<a href=\"https://github.com/myestorm/examples.git\">https://github.com/myestorm/examples.git</a>。</p>\n","path":"collection/beginner","pathTitle":"初级教程","navigation":[{"tag":"h1","slug":"%E5%A6%82%E4%BD%95%E7%94%A8css%E5%92%8Chtml%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E9%A1%B5%E9%9D%A2---%E7%BB%86%E8%8A%82","title":"如何用css和html制作一个页面 - 细节"}],"orderIndex":5,"filename":"ru-he-yong-css-he-html-zhi-zuo-yi-ge-ye-mian-----xi-jie"},{"body":"<h1 id=\"node%E6%90%AD%E5%BB%BA%E5%9F%BA%E7%A1%80%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83\"><a class=\"header-anchor\" href=\"#node%E6%90%AD%E5%BB%BA%E5%9F%BA%E7%A1%80%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83\">¶</a> NODE搭建基础开发环境</h1>\n<p>本来在这里不想引入node，但是没有办法，node在前端开发的过程中，已经是绕不过去的一个问题。用对应的脚手架工具可以帮助节省很多的开发成本。比如我们在前面几节里面，修改了页面内容，必须要在浏览器手动刷新才可以看到修改后的效果。如果我们使用 <code>Browsersync</code> 之后，就无需手动刷新，修改自动同步。</p>\n<h2 id=\"window%E7%B3%BB%E5%88%97%E5%AE%89%E8%A3%85node\"><a class=\"header-anchor\" href=\"#window%E7%B3%BB%E5%88%97%E5%AE%89%E8%A3%85node\">¶</a> window系列安装NODE</h2>\n<ul>\n<li>先去官方网站下载安装包 <a href=\"https://nodejs.org/en/\">https://nodejs.org/en/</a> 建议选择LTS版本</li>\n<li>双击安装包，直接下一步，点完成就行了</li>\n<li>然后在cmd（自行百度“如果打开window的cmd”）窗口里面输入 <code>node -v</code> 如果能显示对应的版本号，证明安装成功了。截图<img src=\"6/1.png\" alt=\"1.png\"></li>\n</ul>\n<h2 id=\"centos-7-%E4%B8%8A%E5%AE%89%E8%A3%85node\"><a class=\"header-anchor\" href=\"#centos-7-%E4%B8%8A%E5%AE%89%E8%A3%85node\">¶</a> centos 7 上安装node</h2>\n<p>这里讲一下源码安装，其他方式可以自行搜索。\n去官网下载对应的安装包：\n<a href=\"https://nodejs.org/en/download/\">nodejs下载地址</a>\n<img src=\"6/2.png\" alt=\"2.png\">\n依次执行命令：</p>\n<pre><code class=\"language-shell\">wget https://nodejs.org/dist/v12.18.2/node-v12.18.2-linux-x64.tar.xz\n// 解压\nxz -d node-v12.18.2-linux-x64.tar.xz\ntar -xvf node-12.18.2-linux-x64.tar\n\n// 进入目录编译安装 (有可能要安装相关依赖: sudo yum install gcc gcc-c++)\ncd node-12.18.2\n./configure\nmake\nsudo make install\n\n// 查看版本（测试安装是否成功）\nnode -v\n</code></pre>\n<h2 id=\"mac%E5%AE%89%E8%A3%85%E8%87%AA%E8%A1%8C%E6%90%9C%E7%B4%A2%E6%8A%8A%EF%BC%8C%E6%B2%A1%E8%AE%BE%E5%A4%87\"><a class=\"header-anchor\" href=\"#mac%E5%AE%89%E8%A3%85%E8%87%AA%E8%A1%8C%E6%90%9C%E7%B4%A2%E6%8A%8A%EF%BC%8C%E6%B2%A1%E8%AE%BE%E5%A4%87\">¶</a> mac安装自行搜索把，没设备</h2>\n<h2 id=\"%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83\"><a class=\"header-anchor\" href=\"#%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83\">¶</a> 实现一个简单的前端开发环境</h2>\n<p>装好了node之后，用 <code>Browsersync</code> 跑一个简单的http服务，Browsersync很好用，对前期学习html和css很有用，又不复杂。如果开发正式的项目，将会讲解 <code>webpack</code> 。</p>\n<p>现在找到一个目录，在目录的地址栏里面输入cmd，就可以直接呼出cmd窗口，并锚定到这个目录。\n<img src=\"6/3.png\" alt=\"3.png\">\n<img src=\"6/4.png\" alt=\"4.png\">\n依次执行命令：</p>\n<pre><code class=\"language-shell\">// 创建demo目录\nmkdir demo\ncd demo\nnpm init\n// 根据提示一步步填写即可 创建完成以后，目录中会有一个 package.json 的文件\n// --registry https://registry.npm.taobao.org 不是必须，国内使用淘宝源会比较快\nnpm install browser-sync --save-dev --registry https://registry.npm.taobao.org\n// 等待安装完成\n</code></pre>\n<p>在根目录下新建一个index.html文件，随便输入一些内容。\n将package.json变成</p>\n<pre><code class=\"language-json\">{\n  &quot;name&quot;: &quot;demo&quot;,\n  &quot;version&quot;: &quot;1.0.0&quot;,\n  &quot;description&quot;: &quot;&quot;,\n  &quot;main&quot;: &quot;index.js&quot;,\n  &quot;scripts&quot;: {\n\t&quot;dev&quot;: &quot;browser-sync start --server --files ./&quot;,\n    &quot;test&quot;: &quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;\n  },\n  &quot;author&quot;: &quot;&quot;,\n  &quot;license&quot;: &quot;ISC&quot;,\n  &quot;devDependencies&quot;: {\n    &quot;browser-sync&quot;: &quot;^2.26.7&quot;\n  }\n}\n</code></pre>\n<p>然后在cmd的窗口中执行\n<code>npm run dev</code> \n会打开你本地默认的浏览器，并访问<a href=\"http://localhost:3000/\">http://localhost:3000/</a>，页面中展示的就是你在index.html中输入的内容。\n更神奇的是，此时你打开 <code>index.html</code> 修改内容并保存，不用刷新修改会自动同步。\ncmd窗口中，有一个“External”，如果手机和电脑在同一个wifi下，用手机访问这个地址，是同步的，更改也是同步的。</p>\n<p>不要指望这就学会了node，这只是用node来帮助你学习得更流畅一些。</p>\n","path":"collection/beginner","pathTitle":"初级教程","navigation":[{"tag":"h1","slug":"node%E6%90%AD%E5%BB%BA%E5%9F%BA%E7%A1%80%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83","title":"NODE搭建基础开发环境"},{"tag":"h2","slug":"window%E7%B3%BB%E5%88%97%E5%AE%89%E8%A3%85node","title":"window系列安装NODE"},{"tag":"h2","slug":"centos-7-%E4%B8%8A%E5%AE%89%E8%A3%85node","title":"centos 7 上安装node"},{"tag":"h2","slug":"mac%E5%AE%89%E8%A3%85%E8%87%AA%E8%A1%8C%E6%90%9C%E7%B4%A2%E6%8A%8A%EF%BC%8C%E6%B2%A1%E8%AE%BE%E5%A4%87","title":"mac安装自行搜索把，没设备"},{"tag":"h2","slug":"%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83","title":"实现一个简单的前端开发环境"}],"orderIndex":6,"filename":"node-da-jian-ji-chu-kai-fa-huan-jing"},{"body":"<h1 id=\"%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8visual-studio-code%E5%92%8Cgit\"><a class=\"header-anchor\" href=\"#%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8visual-studio-code%E5%92%8Cgit\">¶</a> 如何使用Visual Studio Code和GIT</h1>\n<p>工欲善其事，必先利其器。VSCODE是前端开发者的不二选择。</p>\n<p>Git是目前世界上最先进的分布式版本控制系统，但是为什么要使用GIT？\n在开发项目的时候，我们会不断地去修改代码。但是有时候可能会改错，或想回到某一个时间点，想查看某一个时间点的代码，如果没有版本控制器，我们需要不断地定时备份代码。显然这样很麻烦，而且备份也不一定好用， 内容重复，无法对比区别。</p>\n<h2 id=\"window%E5%AE%89%E8%A3%85git\"><a class=\"header-anchor\" href=\"#window%E5%AE%89%E8%A3%85git\">¶</a> window安装GIT</h2>\n<ol>\n<li>下载GIT，window安装包 <a href=\"https://git-scm.com/downloads\">https://git-scm.com/downloads</a>。</li>\n<li>双击，不停下一步就可以了。</li>\n<li>安装完成之后，在桌面点击鼠标右键，会出现2个选项：Git GUI Here和Git Bash Here。GUI是图形操作界面，Bash是命令行模式。点击“Git Bash Here”会出现一个黑框框，输入 <code>node -v</code> 可以查看node的版本。实际功能与cmd相似。输入 <code>git --version</code> 可以查看当前GIT版本。</li>\n</ol>\n<h2 id=\"%E5%A6%82%E4%BD%95%E7%BB%93%E5%90%88github.com%E4%BD%BF%E7%94%A8git\"><a class=\"header-anchor\" href=\"#%E5%A6%82%E4%BD%95%E7%BB%93%E5%90%88github.com%E4%BD%BF%E7%94%A8git\">¶</a> 如何结合github.com使用GIT</h2>\n<ol>\n<li>先去github注册一个账号，<a href=\"https://github.com/\">https://github.com/</a>。</li>\n<li>新建一个仓库<img src=\"7/1.png\" alt=\"1.png\"></li>\n<li>复制仓库地址<img src=\"7/2.png\" alt=\"2.png\"></li>\n<li>点击右键，点击“Git Bash Here”输入命令</li>\n</ol>\n<pre><code class=\"language-shell\">git clone https://github.com/myestorm/examples.git\n# 完成后会出现 examples 的文件夹\ncd examples\ntouch filename.txt # 创建文件\nvim filename.txt # 编辑文件 随意输入一些内容 按esc键 输入 :wq 保存文件\ngit add . # 缓存所有的修改\ngit commit -m &quot;add filename&quot; # 提交变更，引号内是 提交理由\ngit push # 推送变更 回到github的网站，刚刚添加的文件就提交上去了\n</code></pre>\n<p>基本用法已经搞定。回头有空整理一下常用的一些git用法。</p>\n<h2 id=\"vs-code-window%E5%AE%89%E8%A3%85\"><a class=\"header-anchor\" href=\"#vs-code-window%E5%AE%89%E8%A3%85\">¶</a> VS CODE window安装</h2>\n<ol>\n<li>先去下载安装包，<a href=\"https://code.visualstudio.com/\">https://code.visualstudio.com/</a>。</li>\n<li>基本也是一路下一步。</li>\n<li>列举一下常用的扩展：简体中文语言包，Beautify（代码美化），ESLint（JS语法检查）等，扩展.vue后缀等，一般来说，文档打开，未识别的会自动提示，直接点击安装即可。</li>\n<li><img src=\"7/3.png\" alt=\"3.png\"></li>\n</ol>\n<h2 id=\"%E7%BB%93%E8%AF%AD\"><a class=\"header-anchor\" href=\"#%E7%BB%93%E8%AF%AD\">¶</a> 结语</h2>\n<p>平常都是使用window居多，mac自行搜索。教程也写得简单，主要是推荐一下2个工具，在后面的过程中会通畅一些。这2个工具基本是前端高频率使用的工具，能搞定所有的前端开发需求了。</p>\n","path":"collection/beginner","pathTitle":"初级教程","navigation":[{"tag":"h1","slug":"%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8visual-studio-code%E5%92%8Cgit","title":"如何使用Visual Studio Code和GIT"},{"tag":"h2","slug":"window%E5%AE%89%E8%A3%85git","title":"window安装GIT"},{"tag":"h2","slug":"%E5%A6%82%E4%BD%95%E7%BB%93%E5%90%88github.com%E4%BD%BF%E7%94%A8git","title":"如何结合github.com使用GIT"},{"tag":"h2","slug":"vs-code-window%E5%AE%89%E8%A3%85","title":"VS CODE window安装"},{"tag":"h2","slug":"%E7%BB%93%E8%AF%AD","title":"结语"}],"orderIndex":7,"filename":"ru-he-shi-yong-visual-studio-code-he-git"},{"body":"<h1 id=\"javascript%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8\"><a class=\"header-anchor\" href=\"#javascript%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8\">¶</a> JAVASCRIPT快速入门</h1>\n<h2 id=\"%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95\"><a class=\"header-anchor\" href=\"#%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95\">¶</a> 基本语法</h2>\n<pre><code class=\"language-javascript\">let a = 1; // 定义变量 行末的分号可写可不写，看个人习惯\nconst b = 'JS'; // 定义常量\nvar v = 'var'; // 定义变量，这个在ES6里面已经弱化了，很少用了\nlet c = '';\n\n// 条件判断\nif (a === 1) { // 如果\n\tc = 'one'\n} else if (a === 2) { // 如果\n\tc = 'two'\n} else { // 否则\n\tc = 'none'\n}\n\n// 循环\nconst arr = [11, 22, 33, 44]\nfor (let i = 0; i &lt; arr.length; i++) {\n  console.log(arr[i])\n}\n\n// 对象取值\nconst obj = {\n  name: &quot;moon&quot;,\n  age: 12\n}\nconst key = 'name'\nconsole.log(obj.name) // 输出moon\nconsole.log(obj[key]) // 输出moon\n\n// 数组取值\nconst arr = ['a', 'b', 'c']\nconsole.log(arr[0]) // 输出 a 索引从0开始 a=&gt;0,b=&gt;1,c=&gt;2​\n</code></pre>\n<h2 id=\"%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\"><a class=\"header-anchor\" href=\"#%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\">¶</a> 数据类型</h2>\n<p>Number（数字）、String（字符）、Boolean（布尔）、Null（空）、Undefined、Symbol、Object（对象）\nTips：Boolean就只有2个值“true(真)”和“false(假)”；Object下还有“Array”、“Function”；Symbol表示独一无二的值。</p>\n<h2 id=\"%E5%8F%98%E9%87%8F\"><a class=\"header-anchor\" href=\"#%E5%8F%98%E9%87%8F\">¶</a> 变量</h2>\n<p>变量的概念基本上和初中代数的方程变量是一致的，只是在计算机程序中，变量不仅可以是数字，还可以是任意数据类型。\n变量在JavaScript中就是用一个变量名表示，变量名是大小写英文、数字、$和_的组合，且不能用数字开头。变量名也不能是JavaScript的关键字，如if、while等。申明变量见上面的代码。</p>\n<h2 id=\"js%E8%BF%90%E8%A1%8C%E8%BF%87%E7%A8%8B\"><a class=\"header-anchor\" href=\"#js%E8%BF%90%E8%A1%8C%E8%BF%87%E7%A8%8B\">¶</a> JS运行过程</h2>\n<p>JS运行必须有环境，要么是浏览器，要么是node。前端所说的JS一般代指在浏览器环境运行。\n运行一段js代码运行会经历2个过程：编译然后再执行。</p>\n<p>简单说一下编译的过程：</p>\n<ol>\n<li>分词/词法分析（Tokenizing/Lexing）这个过程会将由字符串组成的字符串分解成（对编程语言来说）有意义的代码块，这些代码块被称为词法单元（token）</li>\n<li>解析/语法分析（Parsing）这个过程是将词法单元流（数组）转换成一个由元素逐级嵌套所组成的代表了程序语法结构的树（抽象语法树，Abstract Syntax Tree, AST）</li>\n<li>代码生成 将AST转换成可执行代码的过程</li>\n</ol>\n<h2 id=\"%E7%BB%93%E5%B0%BE\"><a class=\"header-anchor\" href=\"#%E7%BB%93%E5%B0%BE\">¶</a> 结尾</h2>\n<p>掌握了上面的内容，就等于学会了汉语拼音，知道怎么和计算机打交道了。一段代码结尾，0-6弹出“及格”，7-8弹出“良好”，9-10弹出“优秀”。</p>\n<pre><code class=\"language-javascript\">for (let i = 0; i &lt;= 10; i++) {\n\tif (i &lt; 7) {\n  \talert(i + ' - 及格')\n  } else if (i &lt; 9) {\n  \talert(i + ' - 良好')\n  } else {\n  \talert(i + ' - 优秀')\n  }\n}\n</code></pre>\n<p>打开chrome浏览器，按F12 打开开发者工具，运行代码试试。粘贴代码，敲回车键。\n<img src=\"8/1.png\" alt=\"1.png\"></p>\n","path":"collection/beginner","pathTitle":"初级教程","navigation":[{"tag":"h1","slug":"javascript%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8","title":"JAVASCRIPT快速入门"},{"tag":"h2","slug":"%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95","title":"基本语法"},{"tag":"h2","slug":"%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B","title":"数据类型"},{"tag":"h2","slug":"%E5%8F%98%E9%87%8F","title":"变量"},{"tag":"h2","slug":"js%E8%BF%90%E8%A1%8C%E8%BF%87%E7%A8%8B","title":"JS运行过程"},{"tag":"h2","slug":"%E7%BB%93%E5%B0%BE","title":"结尾"}],"orderIndex":8,"filename":"javascript-kuai-su-ru-men"},{"body":"<h1 id=\"%E8%AF%B4%E4%B8%80%E8%AF%B4js%E4%B8%AD%E7%9A%84object\"><a class=\"header-anchor\" href=\"#%E8%AF%B4%E4%B8%80%E8%AF%B4js%E4%B8%AD%E7%9A%84object\">¶</a> 说一说JS中的Object</h1>\n<p>Object是在javascript中一个经常使用的类型，而且JS中的所有对象都是继承自Object对象的。虽说我们平时只是简单地使用了Object对象来存储数据，并没有使用到太多其他功能，但是Object对象其实包含了很多有用的属性和方法，尤其是ES6增加的方法，因此，本文将从最基本的介绍开始，详细说明了Object的常用方法和应用。</p>\n<p>Object翻译成中文就是“对象”。JavaScript 的核心是支持面向对象的，同时它也提供了强大灵活的 OOP （Object Oriented Programming）语言能力。</p>\n<p>术语就不说了，只是谈一下初级的入门。对象可以看作是一个人，人具有属性（黑头发，黄皮肤，黑眼珠）和方法（走路，说话，微笑），通过new就可以得到一堆类似的人。其实准确的说法不是一个“人”，而是对人的一些定义。</p>\n<h2 id=\"%E5%B8%B8%E7%94%A8js%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1%E6%96%B9%E6%B3%95\"><a class=\"header-anchor\" href=\"#%E5%B8%B8%E7%94%A8js%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1%E6%96%B9%E6%B3%95\">¶</a> 常用JS创建对象方法</h2>\n<pre><code class=\"language-js\">const obj = new Object(); // Object构造函数创建\nconst obj1 = { // 使用对象字面量 这个是最常用的方式 \n    color: 'red'\n}\n\nobj.name = 'zhangsan'\nobj.age = 36\nobj.say = (people) =&gt; {\n    console.log(`Hi, ${people}!!!`)\n}\n\nobj1.name = 'lisi'\nobj1.age = 40\nobj1.walk = () =&gt; {\n    console.log('i am walking!!')\n}\n\n// 调用对象方法\nobj.say('xiaoming')\nobj1.walk()\n\n// 获取对象对象属性\nconsole.log(obj1.age)\nconst key = 'name'\nconsole.log(obj1[key]) // 等价于 console.log(obj1.name)，因为key是变量所以用[]来取值\n</code></pre>\n<h2 id=\"%E5%A6%82%E4%BD%95%E9%81%8D%E5%8E%86object%E7%9A%84%E6%89%80%E6%9C%89%E5%B1%9E%E6%80%A7\"><a class=\"header-anchor\" href=\"#%E5%A6%82%E4%BD%95%E9%81%8D%E5%8E%86object%E7%9A%84%E6%89%80%E6%9C%89%E5%B1%9E%E6%80%A7\">¶</a> 如何遍历Object的所有属性</h2>\n<pre><code class=\"language-js\">const obj = {\n    color: 'red',\n    age: 40,\n    walk: (param) =&gt; {\n        console.log(param)\n    }\n}\nObject.keys(obj).forEach(item =&gt; {\n    console.log(item, obj[item])\n})\n</code></pre>\n<h2 id=\"%E7%89%B9%E6%AE%8A%E5%AF%B9%E8%B1%A1-%E6%95%B0%E7%BB%84%E5%AF%B9%E8%B1%A1\"><a class=\"header-anchor\" href=\"#%E7%89%B9%E6%AE%8A%E5%AF%B9%E8%B1%A1-%E6%95%B0%E7%BB%84%E5%AF%B9%E8%B1%A1\">¶</a> 特殊对象-数组对象</h2>\n<p>什么是数组？是相同数据类型的元素按一定”顺序“排列的集合。注意有顺序，数组是有顺序的。简单的规则：<code>{}</code>是无序的，<code>[]</code>是有序的。数组的顺序是从<code>0</code>开始，即下标是从<code>0</code>开始。</p>\n<pre><code class=\"language-js\">const arr = ['a', 'b', 'c']\nconst arr1 = new Array()\nconst arrObj = [{\n    a: 1,\n    b: 2\n}, {\n    a: 2,\n    b: 3\n}]\narr1.push(1, 2, 3) // 数组最后加入“1”,“2”,“3”\narr1.unshift(0) // 数组最前面加入“0”\narr.splice(1, 1) // 删除'b' 从下标0开始删1位\narr.forEach((item, index) =&gt; { // 遍历数组\n    console.log(item, index) // item是值， index是下标\n})\nconst arr2 = arr.concat(arr1) // 合并数组\nconst arr3 = arr1.filter(item =&gt; item &gt; 2) // 过滤数组 保留大于2的项目\nconst arr4 = arrObj.find(item =&gt; item.a === 2) // 查找a === 2的项\nconst arr5 = arrObj.findIndex(item =&gt; item.a === 2) // 查找a === 2的项的下标\nconsole.log(arr)\nconsole.log(arr1)\nconsole.log(arr2)\nconsole.log(arr3)\nconsole.log(arr4)\nconsole.log(arr5)\n</code></pre>\n<p>当然数组还有更多的方法，这里只是列出来经常用的，大约是关于数据的增删改查。</p>\n<h2 id=\"%E7%89%B9%E6%AE%8A%E5%AF%B9%E8%B1%A1-function\"><a class=\"header-anchor\" href=\"#%E7%89%B9%E6%AE%8A%E5%AF%B9%E8%B1%A1-function\">¶</a> 特殊对象-Function</h2>\n<p>Function翻译成中文就是函数。<code>函数是指一段可以直接被另一段程序或代码引用的程序或代码。</code></p>\n<p>函数在JS里面应该是最重要的东西了，下面的方法只说用法场景，并不解释原理。我始终觉得场景是记住用法的最好的方式。我们也不说“茴”的四种写法，只说最常用的方式。</p>\n<pre><code class=\"language-js\">// 全局\nfunction add (a, b) { // a,b 有个叫法 形参\n    const c = 1 // 局部变量，在“{}”之外无法访问\n    return a + b + c // 返回结果\n}\nconsole.log(add(2, 3)) // 输出6 2，3有个叫法 实参\nconsole.log(c) // 抛出异常 c is not dfined\n\n\nfunction Person (name, age) {\n    this.name = name\n    this.age = age\n    this.cry = function () {\n        console.log(this.name + '哭泣中...')\n    }\n}\n// 原型方法，可以继承\nPerson.prototype.sayHi = function () {\n    console.log(`Hi, my name is ${this.name}`)\n}\nconst xiaoMing = new Person('小明', 20)\nconsole.log(xiaoMing.age) // 输出20\nxiaoMing.sayHi()\nxiaoMing.cry()\n\nconst xiaoHong = new Person('小红', 25)\nconsole.log(xiaoHong.name) // 输出20\nxiaoHong.sayHi()\n\n// 为啥要提这个写法，与直接写Function的作用域不一样，其他可以等价\nconst remove = (a, b) =&gt; {\n    return a - b\n}\nconsole.log(remove(10, 8)) // 输出2\n</code></pre>\n<p>函数之所以重要，就是当你发现自己不停的在重复某个动作的时候，就可以考虑封装一个函数。结合数组对象来理解，Function就是可以自己来自定义类似数组一样的对象，然后反复用。这里有2个坑，一个是<code>this</code>的指向，一个是原型链。这个2个坑比较深，作为入门我觉得无需了解。</p>\n<h2 id=\"js%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F\"><a class=\"header-anchor\" href=\"#js%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F\">¶</a> JS的作用域</h2>\n<p>在 JavaScript 中, 作用域为可访问变量，对象，函数的集合。说白了就是，在某一个区域你能干什么。</p>\n<ul>\n<li>\n<p>变量在函数内声明，变量为局部作用域。局部变量：只能在函数内部访问。</p>\n</li>\n<li>\n<p>变量在函数外定义，即为全局变量。全局变量有 全局作用域: 网页中所有脚本和函数均可使用。</p>\n</li>\n<li>\n<p>JavaScript 变量生命周期</p>\n<ul>\n<li>\n<p>JavaScript 变量生命周期在它声明时初始化。</p>\n</li>\n<li>\n<p>局部变量在函数执行完毕后销毁。</p>\n</li>\n<li>\n<p>全局变量在页面关闭后销毁。</p>\n</li>\n</ul>\n</li>\n<li>\n<p>在 HTML 中, 全局变量是 window 对象: 所有数据变量都属于 window 对象</p>\n</li>\n<li>\n<p>ES6中尽量使用<code>let</code>和<code>const</code>来定义变量，基本能保证变量的作用域和书写的顺序一致</p>\n</li>\n</ul>\n<h2 id=\"%E5%80%BC%E7%B1%BB%E5%9E%8B%E5%92%8C%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B\"><a class=\"header-anchor\" href=\"#%E5%80%BC%E7%B1%BB%E5%9E%8B%E5%92%8C%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B\">¶</a> 值类型和引用类型</h2>\n<ul>\n<li>\n<p>值类型（基本类型）：字符串（string）、数值（number）、布尔值（boolean）、undefined、null  （这5种基本数据类型是按值访问的，因为可以操作保存在变量中的实际的值）(ECMAScript 2016新增了一种基本数据类型：symbol</p>\n</li>\n<li>\n<p>引用类型：对象（Object）、数组（Array）、函数（Function）</p>\n</li>\n<li>\n<p>值类型占用空间固定，保存与复制的是值本身；引用类型占用空间不固定，保存与复制的是指向对象的一个指针</p>\n</li>\n</ul>\n<pre><code class=\"language-js\">// 值类型\nlet a = 'string'\nlet b = a\nb = 1\nconsole.log(a, b) // 输出 string, 1\n\n// 引用类型\nlet c = {\n    a: 1,\n    b: 2\n}\nlet d = c\nd.a = 3\nconsole.log(c, d) // 输出 {a: 3, b: 2}，{a: 3, b: 2} \n// 实际说明c,d是同一个东西或指向了同一个东西，改一个，全都变了\n</code></pre>\n<h2 id=\"%E5%A5%BD%E7%9A%84%E7%BC%96%E7%A8%8B%E4%B9%A0%E6%83%AF\"><a class=\"header-anchor\" href=\"#%E5%A5%BD%E7%9A%84%E7%BC%96%E7%A8%8B%E4%B9%A0%E6%83%AF\">¶</a> 好的编程习惯</h2>\n<p>编程就跟炒菜是一个道理，先把所有的原料（数据）都准备好，然后再炒（运算），上桌（得到预期的结果）。所以在写一段代码的时候，尽量把需要的变量，数据都准备好，摆在前面，然后再处理逻辑。Js虽然是一种弱类型语言，但是我们在定义变量的时候，尽量明确变量的数据类型。</p>\n","path":"collection/beginner","pathTitle":"初级教程","navigation":[{"tag":"h1","slug":"%E8%AF%B4%E4%B8%80%E8%AF%B4js%E4%B8%AD%E7%9A%84object","title":"说一说JS中的Object"},{"tag":"h2","slug":"%E5%B8%B8%E7%94%A8js%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1%E6%96%B9%E6%B3%95","title":"常用JS创建对象方法"},{"tag":"h2","slug":"%E5%A6%82%E4%BD%95%E9%81%8D%E5%8E%86object%E7%9A%84%E6%89%80%E6%9C%89%E5%B1%9E%E6%80%A7","title":"如何遍历Object的所有属性"},{"tag":"h2","slug":"%E7%89%B9%E6%AE%8A%E5%AF%B9%E8%B1%A1-%E6%95%B0%E7%BB%84%E5%AF%B9%E8%B1%A1","title":"特殊对象-数组对象"},{"tag":"h2","slug":"%E7%89%B9%E6%AE%8A%E5%AF%B9%E8%B1%A1-function","title":"特殊对象-Function"},{"tag":"h2","slug":"js%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F","title":"JS的作用域"},{"tag":"h2","slug":"%E5%80%BC%E7%B1%BB%E5%9E%8B%E5%92%8C%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B","title":"值类型和引用类型"},{"tag":"h2","slug":"%E5%A5%BD%E7%9A%84%E7%BC%96%E7%A8%8B%E4%B9%A0%E6%83%AF","title":"好的编程习惯"}],"orderIndex":9,"filename":"shuo-yi-shuo-js-zhong-de-object"}]},"collection/intermediate":{"title":"中级教程","keywords":["前端","初级","教程"],"desc":"这份HTML初级教程假设你没有任何HTML和CSS的知识背景。学习基本的HTML十分容易，只要你能从头到尾按照每一步骤来实践。最后我们会将每一步综合起来，以便我们继续学习CSS初级指南。","id":"fngd6n9e","body":"","path":"collection/intermediate","count":0,"pagesize":10,"list":[]},"frontend/css":{"title":"文章集子","keywords":["前端","初级","教程"],"desc":"这份HTML初级教程假设你没有任何HTML和CSS的知识背景。学习基本的HTML十分容易，只要你能从头到尾按照每一步骤来实践。最后我们会将每一步综合起来，以便我们继续学习CSS初级指南。","id":"x8ma3zj7","body":"","path":"frontend/css","count":2,"pagesize":10,"list":[{"title":"html标签学习","keywords":["前端","初级","教程"],"desc":"这份HTML初级教程假设你没有任何HTML和CSS的知识背景。学习基本的HTML十分容易，只要你能从头到尾按照每一步骤来实践。最后我们会将每一步综合起来，以便我们继续学习CSS初级指南。","publishDate":"2020-08-30T19:46:12.000Z","body":"<h2 id=\"%E5%88%86%E7%B1%BB1\"><a class=\"header-anchor\" href=\"#%E5%88%86%E7%B1%BB1\">¶</a> 分类1</h2>\n<pre><code class=\"language-javascript\">const a = 1;\nconsole.log(a)\n</code></pre>\n<h2 id=\"%E5%88%86%E7%B1%BB2\"><a class=\"header-anchor\" href=\"#%E5%88%86%E7%B1%BB2\">¶</a> 分类2</h2>\n<h3 id=\"%E5%88%86%E7%B1%BB3\"><a class=\"header-anchor\" href=\"#%E5%88%86%E7%B1%BB3\">¶</a> 分类3</h3>\n","path":"frontend/css","pathTitle":"文章集子","navigation":[{"tag":"h2","slug":"%E5%88%86%E7%B1%BB1","title":"分类1"},{"tag":"h2","slug":"%E5%88%86%E7%B1%BB2","title":"分类2"},{"tag":"h3","slug":"%E5%88%86%E7%B1%BB3","title":"分类3"}],"orderIndex":999,"filename":"test"},{"title":"html标签学习2","keywords":["前端2","初级2","教程2"],"desc":"这份HTML初级教程假设你没有任何HTML和CSS的知识背景。学习基本的HTML十分容易，只要你能从头到尾按照每一步骤来实践。最后我们会将每一步综合起来，以便我们继续学习CSS初级指南。","publishDate":"2020-08-30T19:48:12.000Z","body":"<h2 id=\"%E5%88%86%E7%B1%BB11\"><a class=\"header-anchor\" href=\"#%E5%88%86%E7%B1%BB11\">¶</a> 分类11</h2>\n<pre><code class=\"language-javascript\">const a = 1;\nconsole.log(a)\n</code></pre>\n<h2 id=\"%E5%88%86%E7%B1%BB22\"><a class=\"header-anchor\" href=\"#%E5%88%86%E7%B1%BB22\">¶</a> 分类22</h2>\n<h3 id=\"%E5%88%86%E7%B1%BB32\"><a class=\"header-anchor\" href=\"#%E5%88%86%E7%B1%BB32\">¶</a> 分类32</h3>\n","path":"frontend/css","pathTitle":"文章集子","navigation":[{"tag":"h2","slug":"%E5%88%86%E7%B1%BB11","title":"分类11"},{"tag":"h2","slug":"%E5%88%86%E7%B1%BB22","title":"分类22"},{"tag":"h3","slug":"%E5%88%86%E7%B1%BB32","title":"分类32"}],"orderIndex":999,"filename":"test2"}]},"frontend/html":{"title":"文章集子","keywords":["前端","初级","教程"],"desc":"这份HTML初级教程假设你没有任何HTML和CSS的知识背景。学习基本的HTML十分容易，只要你能从头到尾按照每一步骤来实践。最后我们会将每一步综合起来，以便我们继续学习CSS初级指南。","id":"x8ma3zj7","body":"","path":"frontend/html","count":2,"pagesize":10,"list":[{"title":"html标签学习----","keywords":["前端","初级","教程"],"desc":"这份HTML初级教程假设你没有任何HTML和CSS的知识背景。学习基本的HTML十分容易，只要你能从头到尾按照每一步骤来实践。最后我们会将每一步综合起来，以便我们继续学习CSS初级指南。","publishDate":"2020-08-30T19:46:12.000Z","orderIndex":3,"body":"<h2 id=\"%E5%88%86%E7%B1%BB1\"><a class=\"header-anchor\" href=\"#%E5%88%86%E7%B1%BB1\">¶</a> 分类1</h2>\n<pre><code class=\"language-javascript\">const a = 1;\nconsole.log(a)\n</code></pre>\n<h2 id=\"%E5%88%86%E7%B1%BB2\"><a class=\"header-anchor\" href=\"#%E5%88%86%E7%B1%BB2\">¶</a> 分类2</h2>\n<h3 id=\"%E5%88%86%E7%B1%BB3\"><a class=\"header-anchor\" href=\"#%E5%88%86%E7%B1%BB3\">¶</a> 分类3</h3>\n","path":"frontend/html","pathTitle":"文章集子","navigation":[{"tag":"h2","slug":"%E5%88%86%E7%B1%BB1","title":"分类1"},{"tag":"h2","slug":"%E5%88%86%E7%B1%BB2","title":"分类2"},{"tag":"h3","slug":"%E5%88%86%E7%B1%BB3","title":"分类3"}],"filename":"test"},{"title":"html标签学习2","keywords":["前端2","初级2","教程2"],"desc":"这份HTML初级教程假设你没有任何HTML和CSS的知识背景。学习基本的HTML十分容易，只要你能从头到尾按照每一步骤来实践。最后我们会将每一步综合起来，以便我们继续学习CSS初级指南。","publishDate":"2020-08-30T19:46:12.000Z","body":"<h2 id=\"%E5%88%86%E7%B1%BB11\"><a class=\"header-anchor\" href=\"#%E5%88%86%E7%B1%BB11\">¶</a> 分类11</h2>\n<pre><code class=\"language-javascript\">const a = 1;\nconsole.log(a)\n</code></pre>\n<h2 id=\"%E5%88%86%E7%B1%BB22\"><a class=\"header-anchor\" href=\"#%E5%88%86%E7%B1%BB22\">¶</a> 分类22</h2>\n<h3 id=\"%E5%88%86%E7%B1%BB32\"><a class=\"header-anchor\" href=\"#%E5%88%86%E7%B1%BB32\">¶</a> 分类32</h3>\n","path":"frontend/html","pathTitle":"文章集子","navigation":[{"tag":"h2","slug":"%E5%88%86%E7%B1%BB11","title":"分类11"},{"tag":"h2","slug":"%E5%88%86%E7%B1%BB22","title":"分类22"},{"tag":"h3","slug":"%E5%88%86%E7%B1%BB32","title":"分类32"}],"orderIndex":999,"filename":"test2"}]},"frontend/javascript":{"title":"文章集子","keywords":["前端","初级","教程"],"desc":"这份HTML初级教程假设你没有任何HTML和CSS的知识背景。学习基本的HTML十分容易，只要你能从头到尾按照每一步骤来实践。最后我们会将每一步综合起来，以便我们继续学习CSS初级指南。","id":"x8ma3zj7","body":"","path":"frontend/javascript","count":2,"pagesize":10,"list":[{"title":"html标签学习","keywords":["前端","初级","教程"],"desc":"这份HTML初级教程假设你没有任何HTML和CSS的知识背景。学习基本的HTML十分容易，只要你能从头到尾按照每一步骤来实践。最后我们会将每一步综合起来，以便我们继续学习CSS初级指南。","publishDate":"2020-08-30T19:46:12.000Z","body":"<h2 id=\"%E5%88%86%E7%B1%BB1\"><a class=\"header-anchor\" href=\"#%E5%88%86%E7%B1%BB1\">¶</a> 分类1</h2>\n<pre><code class=\"language-javascript\">const a = 1;\nconsole.log(a)\n</code></pre>\n<h2 id=\"%E5%88%86%E7%B1%BB2\"><a class=\"header-anchor\" href=\"#%E5%88%86%E7%B1%BB2\">¶</a> 分类2</h2>\n<h3 id=\"%E5%88%86%E7%B1%BB3\"><a class=\"header-anchor\" href=\"#%E5%88%86%E7%B1%BB3\">¶</a> 分类3</h3>\n","path":"frontend/javascript","pathTitle":"文章集子","navigation":[{"tag":"h2","slug":"%E5%88%86%E7%B1%BB1","title":"分类1"},{"tag":"h2","slug":"%E5%88%86%E7%B1%BB2","title":"分类2"},{"tag":"h3","slug":"%E5%88%86%E7%B1%BB3","title":"分类3"}],"orderIndex":999,"filename":"test"},{"title":"html标签学习2","keywords":["前端2","初级2","教程2"],"desc":"这份HTML初级教程假设你没有任何HTML和CSS的知识背景。学习基本的HTML十分容易，只要你能从头到尾按照每一步骤来实践。最后我们会将每一步综合起来，以便我们继续学习CSS初级指南。","publishDate":"2020-08-30T19:46:12.000Z","body":"<h2 id=\"%E5%88%86%E7%B1%BB11\"><a class=\"header-anchor\" href=\"#%E5%88%86%E7%B1%BB11\">¶</a> 分类11</h2>\n<pre><code class=\"language-javascript\">const a = 1;\nconsole.log(a)\n</code></pre>\n<h2 id=\"%E5%88%86%E7%B1%BB22\"><a class=\"header-anchor\" href=\"#%E5%88%86%E7%B1%BB22\">¶</a> 分类22</h2>\n<h3 id=\"%E5%88%86%E7%B1%BB32\"><a class=\"header-anchor\" href=\"#%E5%88%86%E7%B1%BB32\">¶</a> 分类32</h3>\n","path":"frontend/javascript","pathTitle":"文章集子","navigation":[{"tag":"h2","slug":"%E5%88%86%E7%B1%BB11","title":"分类11"},{"tag":"h2","slug":"%E5%88%86%E7%B1%BB22","title":"分类22"},{"tag":"h3","slug":"%E5%88%86%E7%B1%BB32","title":"分类32"}],"orderIndex":999,"filename":"test2"}]}}