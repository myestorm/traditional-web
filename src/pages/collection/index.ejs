<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title><%- `\<\%= htmlWebpackPlugin.options.title \%\>` -%></title>
    <meta name="viewport" content="width=device-width,initial-scale=1,user-scalable=no">
  </head>
  <body>
    <div class="totonoo--layout-collection">
      <%- include('../../components/header.ejs', {
        navCurrent: 1
      }) %>
      <div class="collection-box" id="totonoo--box">
        <div class="collection-list" id="totonoo--list">
          <h2>【标签学习】 目录</h2>
          <nav class="catalog-box">
            <ul>
              <li><a href="#">html标签学习</a></li>
              <li class="current"><a href="#">css基本概念学习</a></li>
              <li><a href="#">如何用css和html制作一个页面 - 布局</a></li>
              <li><a href="#">NODE搭建基础开发环境</a></li>
              <li><a href="#">如何使用Visual Studio Code和GIT</a></li>
              <li><a href="#">JAVASCRIPT快速入门</a></li>
              <li><a href="#">说一说JS中的Object</a></li>
              <li><a href="#">来一场实战，ajax和操作dom</a></li>
              <li><a href="#">关于基础的重要性以及如何进阶</a></li>
              <li><a href="#">流行的前端框架</a></li>
            </ul>
          </nav>
          <div class="drag-bar" id="totonoo--bar">
            <div class="bar"></div>
          </div>
        </div>
        <div class="collection-main" id="totonoo--main">
          <div class="collection-article-outer">
            <div class="collection-article">
              <article class="totonoo--markdown-style" id="totonoo--article">
                <h1 id="node%E6%90%AD%E5%BB%BA%E5%9F%BA%E7%A1%80%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83"><a class="header-anchor" href="#node%E6%90%AD%E5%BB%BA%E5%9F%BA%E7%A1%80%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83">¶</a> NODE搭建基础开发环境</h1>
    <p>本来在这里不想引入node，但是没有办法，node在前端开发的过程中，已经是绕不过去的一个问题。用对应的脚手架工具可以帮助节省很多的开发成本。比如我们在前面几节里面，修改了页面内容，必须要在浏览器手动刷新才可以看到修改后的效果。如果我们使用 <code>Browsersync</code> 之后，就无需手动刷新，修改自动同步。</p>
    <h2 id="window%E7%B3%BB%E5%88%97%E5%AE%89%E8%A3%85node">1<a class="header-anchor" href="#window%E7%B3%BB%E5%88%97%E5%AE%89%E8%A3%85node">¶</a> window系列安装NODE</h2>
    <ul>
    <li>先去官方网站下载安装包 <a href="https://nodejs.org/en/">https://nodejs.org/en/</a> 建议选择LTS版本</li>
    <li>双击安装包，直接下一步，点完成就行了</li>
    <li>然后在cmd（自行百度“如果打开window的cmd”）窗口里面输入 <code>node -v</code> 如果能显示对应的版本号，证明安装成功了。截图</li>
    </ul>
    <h2 id="centos-7-%E4%B8%8A%E5%AE%89%E8%A3%85node">2<a class="header-anchor" href="#centos-7-%E4%B8%8A%E5%AE%89%E8%A3%85node">¶</a> centos 7 上安装node</h2>
    <p>这里讲一下源码安装，其他方式可以自行搜索。
    去官网下载对应的安装包：
    <a href="https://nodejs.org/en/download/">nodejs下载地址</a>
    依次执行命令：</p>
    <pre><code class="language-shell">wget https://nodejs.org/dist/v12.18.2/node-v12.18.2-linux-x64.tar.xz
    // 解压
    xz -d node-v12.18.2-linux-x64.tar.xz
    tar -xvf node-12.18.2-linux-x64.tar

    // 进入目录编译安装 (有可能要安装相关依赖: sudo yum install gcc gcc-c++)
    cd node-12.18.2
    ./configure
    make
    sudo make install

    // 查看版本（测试安装是否成功）
    node -v
    </code></pre>
    <h2 id="mac%E5%AE%89%E8%A3%85%E8%87%AA%E8%A1%8C%E6%90%9C%E7%B4%A2%E6%8A%8A%EF%BC%8C%E6%B2%A1%E8%AE%BE%E5%A4%87">3<a class="header-anchor" href="#mac%E5%AE%89%E8%A3%85%E8%87%AA%E8%A1%8C%E6%90%9C%E7%B4%A2%E6%8A%8A%EF%BC%8C%E6%B2%A1%E8%AE%BE%E5%A4%87">¶</a> mac安装自行搜索把，没设备</h2>
    <h2 id="%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83">4<a class="header-anchor" href="#%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83">¶</a> 实现一个简单的前端开发环境</h2>
    <p>装好了node之后，用 <code>Browsersync</code> 跑一个简单的http服务，Browsersync很好用，对前期学习html和css很有用，又不复杂。如果开发正式的项目，将会讲解 <code>webpack</code> 。</p>
    <p>现在找到一个目录，在目录的地址栏里面输入cmd，就可以直接呼出cmd窗口，并锚定到这个目录。
    依次执行命令：</p>
    <pre><code class="language-shell">// 创建demo目录
    mkdir demo
    cd demo
    npm init
    // 根据提示一步步填写即可 创建完成以后，目录中会有一个 package.json 的文件
    // --registry https://registry.npm.taobao.org 不是必须，国内使用淘宝源会比较快
    npm install browser-sync --save-dev --registry https://registry.npm.taobao.org
    // 等待安装完成
    </code></pre>
    <p>在根目录下新建一个index.html文件，随便输入一些内容。
    将package.json变成</p>
    <pre><code class="language-json">{
      &quot;name&quot;: &quot;demo&quot;,
      &quot;version&quot;: &quot;1.0.0&quot;,
      &quot;description&quot;: &quot;&quot;,
      &quot;main&quot;: &quot;index.js&quot;,
      &quot;scripts&quot;: {
    \t&quot;dev&quot;: &quot;browser-sync start --server --files ./&quot;,
        &quot;test&quot;: &quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;
      },
      &quot;author&quot;: &quot;&quot;,
      &quot;license&quot;: &quot;ISC&quot;,
      &quot;devDependencies&quot;: {
        &quot;browser-sync&quot;: &quot;^2.26.7&quot;
      }
    }
    </code></pre>
    <p>然后在cmd的窗口中执行
    <code>npm run dev</code> 
    会打开你本地默认的浏览器，并访问<a href="http://localhost:3000/">http://localhost:3000/</a>，页面中展示的就是你在index.html中输入的内容。
    更神奇的是，此时你打开 <code>index.html</code> 修改内容并保存，不用刷新修改会自动同步。
    cmd窗口中，有一个“External”，如果手机和电脑在同一个wifi下，用手机访问这个地址，是同步的，更改也是同步的。</p>
    <p>不要指望这就学会了node，这只是用node来帮助你学习得更流畅一些。</p>
              </article>
            </div>
            <%- include('../../components/footer.ejs') %>
          </div>
        </div>
        <div class="collection-nav" id="totonoo--nav">
          <ul>
            <li class="h2 current" data-index="0"><a href="#">用手机访问这个地址用手机访问这个地址用手机访问这个地址</a></li>
            <li class="h3" data-index="1"><a href="#">已经是绕不过去的</a></li>
            <li class="h3" data-index="2"><a href="#">修改了页面内容</a></li>
            <li class="h2" data-index="3"><a href="#">window系列安装NODE</a></li>
            <li class="h3" data-index="4"><a href="#">实现一个简单的前端开发环境</a></li>
            <li class="h4" data-index="5"><a href="#">看到修改后的效果</a></li>
            <li class="h5" data-index="6"><a href="#">在根目录下新建一个index</a></li>
            <li class="h6" data-index="7"><a href="#">国内使用淘宝源会比较快</a></li>
          </ul>
        </div>
      </div>
    </div>
  </body>
</html>